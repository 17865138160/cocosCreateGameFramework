"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
exports.__esModule = true;
exports.GeneratedCodeInfo_Annotation = exports.GeneratedCodeInfo = exports.SourceCodeInfo_Location = exports.SourceCodeInfo = exports.UninterpretedOption_NamePart = exports.UninterpretedOption = exports.MethodOptions = exports.ServiceOptions = exports.EnumValueOptions = exports.EnumOptions = exports.OneofOptions = exports.FieldOptions = exports.MessageOptions = exports.FileOptions = exports.MethodDescriptorProto = exports.ServiceDescriptorProto = exports.EnumValueDescriptorProto = exports.EnumDescriptorProto_EnumReservedRange = exports.EnumDescriptorProto = exports.OneofDescriptorProto = exports.FieldDescriptorProto = exports.ExtensionRangeOptions = exports.DescriptorProto_ReservedRange = exports.DescriptorProto_ExtensionRange = exports.DescriptorProto = exports.FileDescriptorProto = exports.FileDescriptorSet = exports.methodOptions_IdempotencyLevelToJSON = exports.methodOptions_IdempotencyLevelFromJSON = exports.MethodOptions_IdempotencyLevel = exports.fieldOptions_JSTypeToJSON = exports.fieldOptions_JSTypeFromJSON = exports.FieldOptions_JSType = exports.fieldOptions_CTypeToJSON = exports.fieldOptions_CTypeFromJSON = exports.FieldOptions_CType = exports.fileOptions_OptimizeModeToJSON = exports.fileOptions_OptimizeModeFromJSON = exports.FileOptions_OptimizeMode = exports.fieldDescriptorProto_LabelToJSON = exports.fieldDescriptorProto_LabelFromJSON = exports.FieldDescriptorProto_Label = exports.fieldDescriptorProto_TypeToJSON = exports.fieldDescriptorProto_TypeFromJSON = exports.FieldDescriptorProto_Type = void 0;
/* eslint-disable */
var minimal_1 = require("protobufjs/minimal");
var Long = require("long");
var FieldDescriptorProto_Type;
(function (FieldDescriptorProto_Type) {
    /**
     * TYPE_DOUBLE - 0 is reserved for errors.
     * Order is weird for historical reasons.
     */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_DOUBLE"] = 1] = "TYPE_DOUBLE";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_FLOAT"] = 2] = "TYPE_FLOAT";
    /**
     * TYPE_INT64 - Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
     * negative values are likely.
     */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_INT64"] = 3] = "TYPE_INT64";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_UINT64"] = 4] = "TYPE_UINT64";
    /**
     * TYPE_INT32 - Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
     * negative values are likely.
     */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_INT32"] = 5] = "TYPE_INT32";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_FIXED64"] = 6] = "TYPE_FIXED64";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_FIXED32"] = 7] = "TYPE_FIXED32";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_BOOL"] = 8] = "TYPE_BOOL";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_STRING"] = 9] = "TYPE_STRING";
    /**
     * TYPE_GROUP - Tag-delimited aggregate.
     * Group type is deprecated and not supported in proto3. However, Proto3
     * implementations should still be able to parse the group wire format and
     * treat group fields as unknown fields.
     */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_GROUP"] = 10] = "TYPE_GROUP";
    /** TYPE_MESSAGE - Length-delimited aggregate. */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_MESSAGE"] = 11] = "TYPE_MESSAGE";
    /** TYPE_BYTES - New in version 2. */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_BYTES"] = 12] = "TYPE_BYTES";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_UINT32"] = 13] = "TYPE_UINT32";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_ENUM"] = 14] = "TYPE_ENUM";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_SFIXED32"] = 15] = "TYPE_SFIXED32";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_SFIXED64"] = 16] = "TYPE_SFIXED64";
    /** TYPE_SINT32 - Uses ZigZag encoding. */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_SINT32"] = 17] = "TYPE_SINT32";
    /** TYPE_SINT64 - Uses ZigZag encoding. */
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["TYPE_SINT64"] = 18] = "TYPE_SINT64";
    FieldDescriptorProto_Type[FieldDescriptorProto_Type["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(FieldDescriptorProto_Type = exports.FieldDescriptorProto_Type || (exports.FieldDescriptorProto_Type = {}));
function fieldDescriptorProto_TypeFromJSON(object) {
    switch (object) {
        case 1:
        case 'TYPE_DOUBLE':
            return FieldDescriptorProto_Type.TYPE_DOUBLE;
        case 2:
        case 'TYPE_FLOAT':
            return FieldDescriptorProto_Type.TYPE_FLOAT;
        case 3:
        case 'TYPE_INT64':
            return FieldDescriptorProto_Type.TYPE_INT64;
        case 4:
        case 'TYPE_UINT64':
            return FieldDescriptorProto_Type.TYPE_UINT64;
        case 5:
        case 'TYPE_INT32':
            return FieldDescriptorProto_Type.TYPE_INT32;
        case 6:
        case 'TYPE_FIXED64':
            return FieldDescriptorProto_Type.TYPE_FIXED64;
        case 7:
        case 'TYPE_FIXED32':
            return FieldDescriptorProto_Type.TYPE_FIXED32;
        case 8:
        case 'TYPE_BOOL':
            return FieldDescriptorProto_Type.TYPE_BOOL;
        case 9:
        case 'TYPE_STRING':
            return FieldDescriptorProto_Type.TYPE_STRING;
        case 10:
        case 'TYPE_GROUP':
            return FieldDescriptorProto_Type.TYPE_GROUP;
        case 11:
        case 'TYPE_MESSAGE':
            return FieldDescriptorProto_Type.TYPE_MESSAGE;
        case 12:
        case 'TYPE_BYTES':
            return FieldDescriptorProto_Type.TYPE_BYTES;
        case 13:
        case 'TYPE_UINT32':
            return FieldDescriptorProto_Type.TYPE_UINT32;
        case 14:
        case 'TYPE_ENUM':
            return FieldDescriptorProto_Type.TYPE_ENUM;
        case 15:
        case 'TYPE_SFIXED32':
            return FieldDescriptorProto_Type.TYPE_SFIXED32;
        case 16:
        case 'TYPE_SFIXED64':
            return FieldDescriptorProto_Type.TYPE_SFIXED64;
        case 17:
        case 'TYPE_SINT32':
            return FieldDescriptorProto_Type.TYPE_SINT32;
        case 18:
        case 'TYPE_SINT64':
            return FieldDescriptorProto_Type.TYPE_SINT64;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return FieldDescriptorProto_Type.UNRECOGNIZED;
    }
}
exports.fieldDescriptorProto_TypeFromJSON = fieldDescriptorProto_TypeFromJSON;
function fieldDescriptorProto_TypeToJSON(object) {
    switch (object) {
        case FieldDescriptorProto_Type.TYPE_DOUBLE:
            return 'TYPE_DOUBLE';
        case FieldDescriptorProto_Type.TYPE_FLOAT:
            return 'TYPE_FLOAT';
        case FieldDescriptorProto_Type.TYPE_INT64:
            return 'TYPE_INT64';
        case FieldDescriptorProto_Type.TYPE_UINT64:
            return 'TYPE_UINT64';
        case FieldDescriptorProto_Type.TYPE_INT32:
            return 'TYPE_INT32';
        case FieldDescriptorProto_Type.TYPE_FIXED64:
            return 'TYPE_FIXED64';
        case FieldDescriptorProto_Type.TYPE_FIXED32:
            return 'TYPE_FIXED32';
        case FieldDescriptorProto_Type.TYPE_BOOL:
            return 'TYPE_BOOL';
        case FieldDescriptorProto_Type.TYPE_STRING:
            return 'TYPE_STRING';
        case FieldDescriptorProto_Type.TYPE_GROUP:
            return 'TYPE_GROUP';
        case FieldDescriptorProto_Type.TYPE_MESSAGE:
            return 'TYPE_MESSAGE';
        case FieldDescriptorProto_Type.TYPE_BYTES:
            return 'TYPE_BYTES';
        case FieldDescriptorProto_Type.TYPE_UINT32:
            return 'TYPE_UINT32';
        case FieldDescriptorProto_Type.TYPE_ENUM:
            return 'TYPE_ENUM';
        case FieldDescriptorProto_Type.TYPE_SFIXED32:
            return 'TYPE_SFIXED32';
        case FieldDescriptorProto_Type.TYPE_SFIXED64:
            return 'TYPE_SFIXED64';
        case FieldDescriptorProto_Type.TYPE_SINT32:
            return 'TYPE_SINT32';
        case FieldDescriptorProto_Type.TYPE_SINT64:
            return 'TYPE_SINT64';
        default:
            return 'UNKNOWN';
    }
}
exports.fieldDescriptorProto_TypeToJSON = fieldDescriptorProto_TypeToJSON;
var FieldDescriptorProto_Label;
(function (FieldDescriptorProto_Label) {
    /** LABEL_OPTIONAL - 0 is reserved for errors */
    FieldDescriptorProto_Label[FieldDescriptorProto_Label["LABEL_OPTIONAL"] = 1] = "LABEL_OPTIONAL";
    FieldDescriptorProto_Label[FieldDescriptorProto_Label["LABEL_REQUIRED"] = 2] = "LABEL_REQUIRED";
    FieldDescriptorProto_Label[FieldDescriptorProto_Label["LABEL_REPEATED"] = 3] = "LABEL_REPEATED";
    FieldDescriptorProto_Label[FieldDescriptorProto_Label["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(FieldDescriptorProto_Label = exports.FieldDescriptorProto_Label || (exports.FieldDescriptorProto_Label = {}));
function fieldDescriptorProto_LabelFromJSON(object) {
    switch (object) {
        case 1:
        case 'LABEL_OPTIONAL':
            return FieldDescriptorProto_Label.LABEL_OPTIONAL;
        case 2:
        case 'LABEL_REQUIRED':
            return FieldDescriptorProto_Label.LABEL_REQUIRED;
        case 3:
        case 'LABEL_REPEATED':
            return FieldDescriptorProto_Label.LABEL_REPEATED;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return FieldDescriptorProto_Label.UNRECOGNIZED;
    }
}
exports.fieldDescriptorProto_LabelFromJSON = fieldDescriptorProto_LabelFromJSON;
function fieldDescriptorProto_LabelToJSON(object) {
    switch (object) {
        case FieldDescriptorProto_Label.LABEL_OPTIONAL:
            return 'LABEL_OPTIONAL';
        case FieldDescriptorProto_Label.LABEL_REQUIRED:
            return 'LABEL_REQUIRED';
        case FieldDescriptorProto_Label.LABEL_REPEATED:
            return 'LABEL_REPEATED';
        default:
            return 'UNKNOWN';
    }
}
exports.fieldDescriptorProto_LabelToJSON = fieldDescriptorProto_LabelToJSON;
/** Generated classes can be optimized for speed or code size. */
var FileOptions_OptimizeMode;
(function (FileOptions_OptimizeMode) {
    /** SPEED - Generate complete code for parsing, serialization, */
    FileOptions_OptimizeMode[FileOptions_OptimizeMode["SPEED"] = 1] = "SPEED";
    /** CODE_SIZE - etc. */
    FileOptions_OptimizeMode[FileOptions_OptimizeMode["CODE_SIZE"] = 2] = "CODE_SIZE";
    /** LITE_RUNTIME - Generate code using MessageLite and the lite runtime. */
    FileOptions_OptimizeMode[FileOptions_OptimizeMode["LITE_RUNTIME"] = 3] = "LITE_RUNTIME";
    FileOptions_OptimizeMode[FileOptions_OptimizeMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(FileOptions_OptimizeMode = exports.FileOptions_OptimizeMode || (exports.FileOptions_OptimizeMode = {}));
function fileOptions_OptimizeModeFromJSON(object) {
    switch (object) {
        case 1:
        case 'SPEED':
            return FileOptions_OptimizeMode.SPEED;
        case 2:
        case 'CODE_SIZE':
            return FileOptions_OptimizeMode.CODE_SIZE;
        case 3:
        case 'LITE_RUNTIME':
            return FileOptions_OptimizeMode.LITE_RUNTIME;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return FileOptions_OptimizeMode.UNRECOGNIZED;
    }
}
exports.fileOptions_OptimizeModeFromJSON = fileOptions_OptimizeModeFromJSON;
function fileOptions_OptimizeModeToJSON(object) {
    switch (object) {
        case FileOptions_OptimizeMode.SPEED:
            return 'SPEED';
        case FileOptions_OptimizeMode.CODE_SIZE:
            return 'CODE_SIZE';
        case FileOptions_OptimizeMode.LITE_RUNTIME:
            return 'LITE_RUNTIME';
        default:
            return 'UNKNOWN';
    }
}
exports.fileOptions_OptimizeModeToJSON = fileOptions_OptimizeModeToJSON;
var FieldOptions_CType;
(function (FieldOptions_CType) {
    /** STRING - Default mode. */
    FieldOptions_CType[FieldOptions_CType["STRING"] = 0] = "STRING";
    FieldOptions_CType[FieldOptions_CType["CORD"] = 1] = "CORD";
    FieldOptions_CType[FieldOptions_CType["STRING_PIECE"] = 2] = "STRING_PIECE";
    FieldOptions_CType[FieldOptions_CType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(FieldOptions_CType = exports.FieldOptions_CType || (exports.FieldOptions_CType = {}));
function fieldOptions_CTypeFromJSON(object) {
    switch (object) {
        case 0:
        case 'STRING':
            return FieldOptions_CType.STRING;
        case 1:
        case 'CORD':
            return FieldOptions_CType.CORD;
        case 2:
        case 'STRING_PIECE':
            return FieldOptions_CType.STRING_PIECE;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return FieldOptions_CType.UNRECOGNIZED;
    }
}
exports.fieldOptions_CTypeFromJSON = fieldOptions_CTypeFromJSON;
function fieldOptions_CTypeToJSON(object) {
    switch (object) {
        case FieldOptions_CType.STRING:
            return 'STRING';
        case FieldOptions_CType.CORD:
            return 'CORD';
        case FieldOptions_CType.STRING_PIECE:
            return 'STRING_PIECE';
        default:
            return 'UNKNOWN';
    }
}
exports.fieldOptions_CTypeToJSON = fieldOptions_CTypeToJSON;
var FieldOptions_JSType;
(function (FieldOptions_JSType) {
    /** JS_NORMAL - Use the default type. */
    FieldOptions_JSType[FieldOptions_JSType["JS_NORMAL"] = 0] = "JS_NORMAL";
    /** JS_STRING - Use JavaScript strings. */
    FieldOptions_JSType[FieldOptions_JSType["JS_STRING"] = 1] = "JS_STRING";
    /** JS_NUMBER - Use JavaScript numbers. */
    FieldOptions_JSType[FieldOptions_JSType["JS_NUMBER"] = 2] = "JS_NUMBER";
    FieldOptions_JSType[FieldOptions_JSType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(FieldOptions_JSType = exports.FieldOptions_JSType || (exports.FieldOptions_JSType = {}));
function fieldOptions_JSTypeFromJSON(object) {
    switch (object) {
        case 0:
        case 'JS_NORMAL':
            return FieldOptions_JSType.JS_NORMAL;
        case 1:
        case 'JS_STRING':
            return FieldOptions_JSType.JS_STRING;
        case 2:
        case 'JS_NUMBER':
            return FieldOptions_JSType.JS_NUMBER;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return FieldOptions_JSType.UNRECOGNIZED;
    }
}
exports.fieldOptions_JSTypeFromJSON = fieldOptions_JSTypeFromJSON;
function fieldOptions_JSTypeToJSON(object) {
    switch (object) {
        case FieldOptions_JSType.JS_NORMAL:
            return 'JS_NORMAL';
        case FieldOptions_JSType.JS_STRING:
            return 'JS_STRING';
        case FieldOptions_JSType.JS_NUMBER:
            return 'JS_NUMBER';
        default:
            return 'UNKNOWN';
    }
}
exports.fieldOptions_JSTypeToJSON = fieldOptions_JSTypeToJSON;
/**
 * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,
 * or neither? HTTP based RPC implementation may choose GET verb for safe
 * methods, and PUT verb for idempotent methods instead of the default POST.
 */
var MethodOptions_IdempotencyLevel;
(function (MethodOptions_IdempotencyLevel) {
    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["IDEMPOTENCY_UNKNOWN"] = 0] = "IDEMPOTENCY_UNKNOWN";
    /** NO_SIDE_EFFECTS - implies idempotent */
    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["NO_SIDE_EFFECTS"] = 1] = "NO_SIDE_EFFECTS";
    /** IDEMPOTENT - idempotent, but may have side effects */
    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["IDEMPOTENT"] = 2] = "IDEMPOTENT";
    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(MethodOptions_IdempotencyLevel = exports.MethodOptions_IdempotencyLevel || (exports.MethodOptions_IdempotencyLevel = {}));
function methodOptions_IdempotencyLevelFromJSON(object) {
    switch (object) {
        case 0:
        case 'IDEMPOTENCY_UNKNOWN':
            return MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN;
        case 1:
        case 'NO_SIDE_EFFECTS':
            return MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS;
        case 2:
        case 'IDEMPOTENT':
            return MethodOptions_IdempotencyLevel.IDEMPOTENT;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return MethodOptions_IdempotencyLevel.UNRECOGNIZED;
    }
}
exports.methodOptions_IdempotencyLevelFromJSON = methodOptions_IdempotencyLevelFromJSON;
function methodOptions_IdempotencyLevelToJSON(object) {
    switch (object) {
        case MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN:
            return 'IDEMPOTENCY_UNKNOWN';
        case MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS:
            return 'NO_SIDE_EFFECTS';
        case MethodOptions_IdempotencyLevel.IDEMPOTENT:
            return 'IDEMPOTENT';
        default:
            return 'UNKNOWN';
    }
}
exports.methodOptions_IdempotencyLevelToJSON = methodOptions_IdempotencyLevelToJSON;
function createBaseFileDescriptorSet() {
    return { file: [] };
}
exports.FileDescriptorSet = {
    encode: function (message, writer) {
        var e_1, _a, e_2, _b, e_3, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        try {
            for (var _d = __values(message.file), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.FileDescriptorProto.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_1 = (e_3 = void 0, __values(values)), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {
                            var value = values_1_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
                    finally {
                        try {
                            if (values_1_1 && !values_1_1.done && (_c = values_1["return"])) _c.call(values_1);
                        }
                        finally { if (e_3) throw e_3.error; }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseFileDescriptorSet());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.file.push(exports.FileDescriptorProto.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            file: Array.isArray(object === null || object === void 0 ? void 0 : object.file) ? object.file.map(function (e) { return exports.FileDescriptorProto.fromJSON(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.file) {
            obj.file = message.file.map(function (e) { return (e ? exports.FileDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.file = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = Object.create(createBaseFileDescriptorSet());
        message.file = ((_a = object.file) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.FileDescriptorProto.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseFileDescriptorProto() {
    return {
        name: '',
        package: '',
        dependency: [],
        publicDependency: [],
        weakDependency: [],
        messageType: [],
        enumType: [],
        service: [],
        extension: [],
        options: undefined,
        sourceCodeInfo: undefined,
        syntax: ''
    };
}
exports.FileDescriptorProto = {
    encode: function (message, writer) {
        var e_4, _a, e_5, _b, e_6, _c, e_7, _d, e_8, _e, e_9, _f, e_10, _g, e_11, _h, e_12, _j;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        if (message.package !== '') {
            writer.uint32(18).string(message.package);
        }
        try {
            for (var _k = __values(message.dependency), _l = _k.next(); !_l.done; _l = _k.next()) {
                var v = _l.value;
                writer.uint32(26).string(v);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_l && !_l.done && (_a = _k["return"])) _a.call(_k);
            }
            finally { if (e_4) throw e_4.error; }
        }
        writer.uint32(82).fork();
        try {
            for (var _m = __values(message.publicDependency), _o = _m.next(); !_o.done; _o = _m.next()) {
                var v = _o.value;
                writer.int32(v);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_o && !_o.done && (_b = _m["return"])) _b.call(_m);
            }
            finally { if (e_5) throw e_5.error; }
        }
        writer.ldelim();
        writer.uint32(90).fork();
        try {
            for (var _p = __values(message.weakDependency), _q = _p.next(); !_q.done; _q = _p.next()) {
                var v = _q.value;
                writer.int32(v);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_q && !_q.done && (_c = _p["return"])) _c.call(_p);
            }
            finally { if (e_6) throw e_6.error; }
        }
        writer.ldelim();
        try {
            for (var _r = __values(message.messageType), _s = _r.next(); !_s.done; _s = _r.next()) {
                var v = _s.value;
                exports.DescriptorProto.encode(v, writer.uint32(34).fork()).ldelim();
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_s && !_s.done && (_d = _r["return"])) _d.call(_r);
            }
            finally { if (e_7) throw e_7.error; }
        }
        try {
            for (var _t = __values(message.enumType), _u = _t.next(); !_u.done; _u = _t.next()) {
                var v = _u.value;
                exports.EnumDescriptorProto.encode(v, writer.uint32(42).fork()).ldelim();
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_u && !_u.done && (_e = _t["return"])) _e.call(_t);
            }
            finally { if (e_8) throw e_8.error; }
        }
        try {
            for (var _v = __values(message.service), _w = _v.next(); !_w.done; _w = _v.next()) {
                var v = _w.value;
                exports.ServiceDescriptorProto.encode(v, writer.uint32(50).fork()).ldelim();
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_w && !_w.done && (_f = _v["return"])) _f.call(_v);
            }
            finally { if (e_9) throw e_9.error; }
        }
        try {
            for (var _x = __values(message.extension), _y = _x.next(); !_y.done; _y = _x.next()) {
                var v = _y.value;
                exports.FieldDescriptorProto.encode(v, writer.uint32(58).fork()).ldelim();
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_y && !_y.done && (_g = _x["return"])) _g.call(_x);
            }
            finally { if (e_10) throw e_10.error; }
        }
        if (message.options !== undefined) {
            exports.FileOptions.encode(message.options, writer.uint32(66).fork()).ldelim();
        }
        if (message.sourceCodeInfo !== undefined) {
            exports.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(74).fork()).ldelim();
        }
        if (message.syntax !== '') {
            writer.uint32(98).string(message.syntax);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _z = __values(Object.keys(message['_unknownFields'])), _0 = _z.next(); !_0.done; _0 = _z.next()) {
                    var key = _0.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_2 = (e_12 = void 0, __values(values)), values_2_1 = values_2.next(); !values_2_1.done; values_2_1 = values_2.next()) {
                            var value = values_2_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_12_1) { e_12 = { error: e_12_1 }; }
                    finally {
                        try {
                            if (values_2_1 && !values_2_1.done && (_j = values_2["return"])) _j.call(values_2);
                        }
                        finally { if (e_12) throw e_12.error; }
                    }
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_0 && !_0.done && (_h = _z["return"])) _h.call(_z);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseFileDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.package = reader.string();
                    break;
                case 3:
                    message.dependency.push(reader.string());
                    break;
                case 10:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.publicDependency.push(reader.int32());
                        }
                    }
                    else {
                        message.publicDependency.push(reader.int32());
                    }
                    break;
                case 11:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.weakDependency.push(reader.int32());
                        }
                    }
                    else {
                        message.weakDependency.push(reader.int32());
                    }
                    break;
                case 4:
                    message.messageType.push(exports.DescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.enumType.push(exports.EnumDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 6:
                    message.service.push(exports.ServiceDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.extension.push(exports.FieldDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 8:
                    message.options = exports.FileOptions.decode(reader, reader.uint32());
                    break;
                case 9:
                    message.sourceCodeInfo = exports.SourceCodeInfo.decode(reader, reader.uint32());
                    break;
                case 12:
                    message.syntax = reader.string();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            package: isSet(object.package) ? String(object.package) : '',
            dependency: Array.isArray(object === null || object === void 0 ? void 0 : object.dependency) ? object.dependency.map(function (e) { return String(e); }) : [],
            publicDependency: Array.isArray(object === null || object === void 0 ? void 0 : object.publicDependency)
                ? object.publicDependency.map(function (e) { return Number(e); })
                : [],
            weakDependency: Array.isArray(object === null || object === void 0 ? void 0 : object.weakDependency) ? object.weakDependency.map(function (e) { return Number(e); }) : [],
            messageType: Array.isArray(object === null || object === void 0 ? void 0 : object.messageType)
                ? object.messageType.map(function (e) { return exports.DescriptorProto.fromJSON(e); })
                : [],
            enumType: Array.isArray(object === null || object === void 0 ? void 0 : object.enumType) ? object.enumType.map(function (e) { return exports.EnumDescriptorProto.fromJSON(e); }) : [],
            service: Array.isArray(object === null || object === void 0 ? void 0 : object.service) ? object.service.map(function (e) { return exports.ServiceDescriptorProto.fromJSON(e); }) : [],
            extension: Array.isArray(object === null || object === void 0 ? void 0 : object.extension)
                ? object.extension.map(function (e) { return exports.FieldDescriptorProto.fromJSON(e); })
                : [],
            options: isSet(object.options) ? exports.FileOptions.fromJSON(object.options) : undefined,
            sourceCodeInfo: isSet(object.sourceCodeInfo) ? exports.SourceCodeInfo.fromJSON(object.sourceCodeInfo) : undefined,
            syntax: isSet(object.syntax) ? String(object.syntax) : ''
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.package !== undefined && (obj.package = message.package);
        if (message.dependency) {
            obj.dependency = message.dependency.map(function (e) { return e; });
        }
        else {
            obj.dependency = [];
        }
        if (message.publicDependency) {
            obj.publicDependency = message.publicDependency.map(function (e) { return Math.round(e); });
        }
        else {
            obj.publicDependency = [];
        }
        if (message.weakDependency) {
            obj.weakDependency = message.weakDependency.map(function (e) { return Math.round(e); });
        }
        else {
            obj.weakDependency = [];
        }
        if (message.messageType) {
            obj.messageType = message.messageType.map(function (e) { return (e ? exports.DescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.messageType = [];
        }
        if (message.enumType) {
            obj.enumType = message.enumType.map(function (e) { return (e ? exports.EnumDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.enumType = [];
        }
        if (message.service) {
            obj.service = message.service.map(function (e) { return (e ? exports.ServiceDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.service = [];
        }
        if (message.extension) {
            obj.extension = message.extension.map(function (e) { return (e ? exports.FieldDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.extension = [];
        }
        message.options !== undefined && (obj.options = message.options ? exports.FileOptions.toJSON(message.options) : undefined);
        message.sourceCodeInfo !== undefined &&
            (obj.sourceCodeInfo = message.sourceCodeInfo ? exports.SourceCodeInfo.toJSON(message.sourceCodeInfo) : undefined);
        message.syntax !== undefined && (obj.syntax = message.syntax);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var message = Object.create(createBaseFileDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.package = (_b = object.package) !== null && _b !== void 0 ? _b : '';
        message.dependency = ((_c = object.dependency) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.publicDependency = ((_d = object.publicDependency) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.weakDependency = ((_e = object.weakDependency) === null || _e === void 0 ? void 0 : _e.map(function (e) { return e; })) || [];
        message.messageType = ((_f = object.messageType) === null || _f === void 0 ? void 0 : _f.map(function (e) { return exports.DescriptorProto.fromPartial(e); })) || [];
        message.enumType = ((_g = object.enumType) === null || _g === void 0 ? void 0 : _g.map(function (e) { return exports.EnumDescriptorProto.fromPartial(e); })) || [];
        message.service = ((_h = object.service) === null || _h === void 0 ? void 0 : _h.map(function (e) { return exports.ServiceDescriptorProto.fromPartial(e); })) || [];
        message.extension = ((_j = object.extension) === null || _j === void 0 ? void 0 : _j.map(function (e) { return exports.FieldDescriptorProto.fromPartial(e); })) || [];
        message.options =
            object.options !== undefined && object.options !== null ? exports.FileOptions.fromPartial(object.options) : undefined;
        message.sourceCodeInfo =
            object.sourceCodeInfo !== undefined && object.sourceCodeInfo !== null
                ? exports.SourceCodeInfo.fromPartial(object.sourceCodeInfo)
                : undefined;
        message.syntax = (_k = object.syntax) !== null && _k !== void 0 ? _k : '';
        return message;
    }
};
function createBaseDescriptorProto() {
    return {
        name: '',
        field: [],
        extension: [],
        nestedType: [],
        enumType: [],
        extensionRange: [],
        oneofDecl: [],
        options: undefined,
        reservedRange: [],
        reservedName: []
    };
}
exports.DescriptorProto = {
    encode: function (message, writer) {
        var e_13, _a, e_14, _b, e_15, _c, e_16, _d, e_17, _e, e_18, _f, e_19, _g, e_20, _h, e_21, _j, e_22, _k;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        try {
            for (var _l = __values(message.field), _m = _l.next(); !_m.done; _m = _l.next()) {
                var v = _m.value;
                exports.FieldDescriptorProto.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_m && !_m.done && (_a = _l["return"])) _a.call(_l);
            }
            finally { if (e_13) throw e_13.error; }
        }
        try {
            for (var _o = __values(message.extension), _p = _o.next(); !_p.done; _p = _o.next()) {
                var v = _p.value;
                exports.FieldDescriptorProto.encode(v, writer.uint32(50).fork()).ldelim();
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (_p && !_p.done && (_b = _o["return"])) _b.call(_o);
            }
            finally { if (e_14) throw e_14.error; }
        }
        try {
            for (var _q = __values(message.nestedType), _r = _q.next(); !_r.done; _r = _q.next()) {
                var v = _r.value;
                exports.DescriptorProto.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_15_1) { e_15 = { error: e_15_1 }; }
        finally {
            try {
                if (_r && !_r.done && (_c = _q["return"])) _c.call(_q);
            }
            finally { if (e_15) throw e_15.error; }
        }
        try {
            for (var _s = __values(message.enumType), _t = _s.next(); !_t.done; _t = _s.next()) {
                var v = _t.value;
                exports.EnumDescriptorProto.encode(v, writer.uint32(34).fork()).ldelim();
            }
        }
        catch (e_16_1) { e_16 = { error: e_16_1 }; }
        finally {
            try {
                if (_t && !_t.done && (_d = _s["return"])) _d.call(_s);
            }
            finally { if (e_16) throw e_16.error; }
        }
        try {
            for (var _u = __values(message.extensionRange), _v = _u.next(); !_v.done; _v = _u.next()) {
                var v = _v.value;
                exports.DescriptorProto_ExtensionRange.encode(v, writer.uint32(42).fork()).ldelim();
            }
        }
        catch (e_17_1) { e_17 = { error: e_17_1 }; }
        finally {
            try {
                if (_v && !_v.done && (_e = _u["return"])) _e.call(_u);
            }
            finally { if (e_17) throw e_17.error; }
        }
        try {
            for (var _w = __values(message.oneofDecl), _x = _w.next(); !_x.done; _x = _w.next()) {
                var v = _x.value;
                exports.OneofDescriptorProto.encode(v, writer.uint32(66).fork()).ldelim();
            }
        }
        catch (e_18_1) { e_18 = { error: e_18_1 }; }
        finally {
            try {
                if (_x && !_x.done && (_f = _w["return"])) _f.call(_w);
            }
            finally { if (e_18) throw e_18.error; }
        }
        if (message.options !== undefined) {
            exports.MessageOptions.encode(message.options, writer.uint32(58).fork()).ldelim();
        }
        try {
            for (var _y = __values(message.reservedRange), _z = _y.next(); !_z.done; _z = _y.next()) {
                var v = _z.value;
                exports.DescriptorProto_ReservedRange.encode(v, writer.uint32(74).fork()).ldelim();
            }
        }
        catch (e_19_1) { e_19 = { error: e_19_1 }; }
        finally {
            try {
                if (_z && !_z.done && (_g = _y["return"])) _g.call(_y);
            }
            finally { if (e_19) throw e_19.error; }
        }
        try {
            for (var _0 = __values(message.reservedName), _1 = _0.next(); !_1.done; _1 = _0.next()) {
                var v = _1.value;
                writer.uint32(82).string(v);
            }
        }
        catch (e_20_1) { e_20 = { error: e_20_1 }; }
        finally {
            try {
                if (_1 && !_1.done && (_h = _0["return"])) _h.call(_0);
            }
            finally { if (e_20) throw e_20.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _2 = __values(Object.keys(message['_unknownFields'])), _3 = _2.next(); !_3.done; _3 = _2.next()) {
                    var key = _3.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_3 = (e_22 = void 0, __values(values)), values_3_1 = values_3.next(); !values_3_1.done; values_3_1 = values_3.next()) {
                            var value = values_3_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_22_1) { e_22 = { error: e_22_1 }; }
                    finally {
                        try {
                            if (values_3_1 && !values_3_1.done && (_k = values_3["return"])) _k.call(values_3);
                        }
                        finally { if (e_22) throw e_22.error; }
                    }
                }
            }
            catch (e_21_1) { e_21 = { error: e_21_1 }; }
            finally {
                try {
                    if (_3 && !_3.done && (_j = _2["return"])) _j.call(_2);
                }
                finally { if (e_21) throw e_21.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.field.push(exports.FieldDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 6:
                    message.extension.push(exports.FieldDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.nestedType.push(exports.DescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.enumType.push(exports.EnumDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.extensionRange.push(exports.DescriptorProto_ExtensionRange.decode(reader, reader.uint32()));
                    break;
                case 8:
                    message.oneofDecl.push(exports.OneofDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.options = exports.MessageOptions.decode(reader, reader.uint32());
                    break;
                case 9:
                    message.reservedRange.push(exports.DescriptorProto_ReservedRange.decode(reader, reader.uint32()));
                    break;
                case 10:
                    message.reservedName.push(reader.string());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            field: Array.isArray(object === null || object === void 0 ? void 0 : object.field) ? object.field.map(function (e) { return exports.FieldDescriptorProto.fromJSON(e); }) : [],
            extension: Array.isArray(object === null || object === void 0 ? void 0 : object.extension)
                ? object.extension.map(function (e) { return exports.FieldDescriptorProto.fromJSON(e); })
                : [],
            nestedType: Array.isArray(object === null || object === void 0 ? void 0 : object.nestedType)
                ? object.nestedType.map(function (e) { return exports.DescriptorProto.fromJSON(e); })
                : [],
            enumType: Array.isArray(object === null || object === void 0 ? void 0 : object.enumType) ? object.enumType.map(function (e) { return exports.EnumDescriptorProto.fromJSON(e); }) : [],
            extensionRange: Array.isArray(object === null || object === void 0 ? void 0 : object.extensionRange)
                ? object.extensionRange.map(function (e) { return exports.DescriptorProto_ExtensionRange.fromJSON(e); })
                : [],
            oneofDecl: Array.isArray(object === null || object === void 0 ? void 0 : object.oneofDecl)
                ? object.oneofDecl.map(function (e) { return exports.OneofDescriptorProto.fromJSON(e); })
                : [],
            options: isSet(object.options) ? exports.MessageOptions.fromJSON(object.options) : undefined,
            reservedRange: Array.isArray(object === null || object === void 0 ? void 0 : object.reservedRange)
                ? object.reservedRange.map(function (e) { return exports.DescriptorProto_ReservedRange.fromJSON(e); })
                : [],
            reservedName: Array.isArray(object === null || object === void 0 ? void 0 : object.reservedName) ? object.reservedName.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        if (message.field) {
            obj.field = message.field.map(function (e) { return (e ? exports.FieldDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.field = [];
        }
        if (message.extension) {
            obj.extension = message.extension.map(function (e) { return (e ? exports.FieldDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.extension = [];
        }
        if (message.nestedType) {
            obj.nestedType = message.nestedType.map(function (e) { return (e ? exports.DescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.nestedType = [];
        }
        if (message.enumType) {
            obj.enumType = message.enumType.map(function (e) { return (e ? exports.EnumDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.enumType = [];
        }
        if (message.extensionRange) {
            obj.extensionRange = message.extensionRange.map(function (e) {
                return e ? exports.DescriptorProto_ExtensionRange.toJSON(e) : undefined;
            });
        }
        else {
            obj.extensionRange = [];
        }
        if (message.oneofDecl) {
            obj.oneofDecl = message.oneofDecl.map(function (e) { return (e ? exports.OneofDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.oneofDecl = [];
        }
        message.options !== undefined &&
            (obj.options = message.options ? exports.MessageOptions.toJSON(message.options) : undefined);
        if (message.reservedRange) {
            obj.reservedRange = message.reservedRange.map(function (e) { return (e ? exports.DescriptorProto_ReservedRange.toJSON(e) : undefined); });
        }
        else {
            obj.reservedRange = [];
        }
        if (message.reservedName) {
            obj.reservedName = message.reservedName.map(function (e) { return e; });
        }
        else {
            obj.reservedName = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        var message = Object.create(createBaseDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.field = ((_b = object.field) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.FieldDescriptorProto.fromPartial(e); })) || [];
        message.extension = ((_c = object.extension) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.FieldDescriptorProto.fromPartial(e); })) || [];
        message.nestedType = ((_d = object.nestedType) === null || _d === void 0 ? void 0 : _d.map(function (e) { return exports.DescriptorProto.fromPartial(e); })) || [];
        message.enumType = ((_e = object.enumType) === null || _e === void 0 ? void 0 : _e.map(function (e) { return exports.EnumDescriptorProto.fromPartial(e); })) || [];
        message.extensionRange = ((_f = object.extensionRange) === null || _f === void 0 ? void 0 : _f.map(function (e) { return exports.DescriptorProto_ExtensionRange.fromPartial(e); })) || [];
        message.oneofDecl = ((_g = object.oneofDecl) === null || _g === void 0 ? void 0 : _g.map(function (e) { return exports.OneofDescriptorProto.fromPartial(e); })) || [];
        message.options =
            object.options !== undefined && object.options !== null ? exports.MessageOptions.fromPartial(object.options) : undefined;
        message.reservedRange = ((_h = object.reservedRange) === null || _h === void 0 ? void 0 : _h.map(function (e) { return exports.DescriptorProto_ReservedRange.fromPartial(e); })) || [];
        message.reservedName = ((_j = object.reservedName) === null || _j === void 0 ? void 0 : _j.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseDescriptorProto_ExtensionRange() {
    return { start: 0, end: 0, options: undefined };
}
exports.DescriptorProto_ExtensionRange = {
    encode: function (message, writer) {
        var e_23, _a, e_24, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.start !== 0) {
            writer.uint32(8).int32(message.start);
        }
        if (message.end !== 0) {
            writer.uint32(16).int32(message.end);
        }
        if (message.options !== undefined) {
            exports.ExtensionRangeOptions.encode(message.options, writer.uint32(26).fork()).ldelim();
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_4 = (e_24 = void 0, __values(values)), values_4_1 = values_4.next(); !values_4_1.done; values_4_1 = values_4.next()) {
                            var value = values_4_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_24_1) { e_24 = { error: e_24_1 }; }
                    finally {
                        try {
                            if (values_4_1 && !values_4_1.done && (_b = values_4["return"])) _b.call(values_4);
                        }
                        finally { if (e_24) throw e_24.error; }
                    }
                }
            }
            catch (e_23_1) { e_23 = { error: e_23_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_23) throw e_23.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseDescriptorProto_ExtensionRange());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.start = reader.int32();
                    break;
                case 2:
                    message.end = reader.int32();
                    break;
                case 3:
                    message.options = exports.ExtensionRangeOptions.decode(reader, reader.uint32());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            start: isSet(object.start) ? Number(object.start) : 0,
            end: isSet(object.end) ? Number(object.end) : 0,
            options: isSet(object.options) ? exports.ExtensionRangeOptions.fromJSON(object.options) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.start !== undefined && (obj.start = Math.round(message.start));
        message.end !== undefined && (obj.end = Math.round(message.end));
        message.options !== undefined &&
            (obj.options = message.options ? exports.ExtensionRangeOptions.toJSON(message.options) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseDescriptorProto_ExtensionRange());
        message.start = (_a = object.start) !== null && _a !== void 0 ? _a : 0;
        message.end = (_b = object.end) !== null && _b !== void 0 ? _b : 0;
        message.options =
            object.options !== undefined && object.options !== null
                ? exports.ExtensionRangeOptions.fromPartial(object.options)
                : undefined;
        return message;
    }
};
function createBaseDescriptorProto_ReservedRange() {
    return { start: 0, end: 0 };
}
exports.DescriptorProto_ReservedRange = {
    encode: function (message, writer) {
        var e_25, _a, e_26, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.start !== 0) {
            writer.uint32(8).int32(message.start);
        }
        if (message.end !== 0) {
            writer.uint32(16).int32(message.end);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_5 = (e_26 = void 0, __values(values)), values_5_1 = values_5.next(); !values_5_1.done; values_5_1 = values_5.next()) {
                            var value = values_5_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_26_1) { e_26 = { error: e_26_1 }; }
                    finally {
                        try {
                            if (values_5_1 && !values_5_1.done && (_b = values_5["return"])) _b.call(values_5);
                        }
                        finally { if (e_26) throw e_26.error; }
                    }
                }
            }
            catch (e_25_1) { e_25 = { error: e_25_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_25) throw e_25.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseDescriptorProto_ReservedRange());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.start = reader.int32();
                    break;
                case 2:
                    message.end = reader.int32();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            start: isSet(object.start) ? Number(object.start) : 0,
            end: isSet(object.end) ? Number(object.end) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.start !== undefined && (obj.start = Math.round(message.start));
        message.end !== undefined && (obj.end = Math.round(message.end));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseDescriptorProto_ReservedRange());
        message.start = (_a = object.start) !== null && _a !== void 0 ? _a : 0;
        message.end = (_b = object.end) !== null && _b !== void 0 ? _b : 0;
        return message;
    }
};
function createBaseExtensionRangeOptions() {
    return { uninterpretedOption: [] };
}
exports.ExtensionRangeOptions = {
    encode: function (message, writer) {
        var e_27, _a, e_28, _b, e_29, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_27_1) { e_27 = { error: e_27_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_27) throw e_27.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_6 = (e_29 = void 0, __values(values)), values_6_1 = values_6.next(); !values_6_1.done; values_6_1 = values_6.next()) {
                            var value = values_6_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_29_1) { e_29 = { error: e_29_1 }; }
                    finally {
                        try {
                            if (values_6_1 && !values_6_1.done && (_c = values_6["return"])) _c.call(values_6);
                        }
                        finally { if (e_29) throw e_29.error; }
                    }
                }
            }
            catch (e_28_1) { e_28 = { error: e_28_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_28) throw e_28.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseExtensionRangeOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = Object.create(createBaseExtensionRangeOptions());
        message.uninterpretedOption = ((_a = object.uninterpretedOption) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseFieldDescriptorProto() {
    return {
        name: '',
        number: 0,
        label: 1,
        type: 1,
        typeName: '',
        extendee: '',
        defaultValue: '',
        oneofIndex: 0,
        jsonName: '',
        options: undefined,
        proto3Optional: false
    };
}
exports.FieldDescriptorProto = {
    encode: function (message, writer) {
        var e_30, _a, e_31, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        if (message.number !== 0) {
            writer.uint32(24).int32(message.number);
        }
        if (message.label !== 1) {
            writer.uint32(32).int32(message.label);
        }
        if (message.type !== 1) {
            writer.uint32(40).int32(message.type);
        }
        if (message.typeName !== '') {
            writer.uint32(50).string(message.typeName);
        }
        if (message.extendee !== '') {
            writer.uint32(18).string(message.extendee);
        }
        if (message.defaultValue !== '') {
            writer.uint32(58).string(message.defaultValue);
        }
        if (message.oneofIndex !== 0) {
            writer.uint32(72).int32(message.oneofIndex);
        }
        if (message.jsonName !== '') {
            writer.uint32(82).string(message.jsonName);
        }
        if (message.options !== undefined) {
            exports.FieldOptions.encode(message.options, writer.uint32(66).fork()).ldelim();
        }
        if (message.proto3Optional === true) {
            writer.uint32(136).bool(message.proto3Optional);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_7 = (e_31 = void 0, __values(values)), values_7_1 = values_7.next(); !values_7_1.done; values_7_1 = values_7.next()) {
                            var value = values_7_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_31_1) { e_31 = { error: e_31_1 }; }
                    finally {
                        try {
                            if (values_7_1 && !values_7_1.done && (_b = values_7["return"])) _b.call(values_7);
                        }
                        finally { if (e_31) throw e_31.error; }
                    }
                }
            }
            catch (e_30_1) { e_30 = { error: e_30_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_30) throw e_30.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseFieldDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 3:
                    message.number = reader.int32();
                    break;
                case 4:
                    message.label = reader.int32();
                    break;
                case 5:
                    message.type = reader.int32();
                    break;
                case 6:
                    message.typeName = reader.string();
                    break;
                case 2:
                    message.extendee = reader.string();
                    break;
                case 7:
                    message.defaultValue = reader.string();
                    break;
                case 9:
                    message.oneofIndex = reader.int32();
                    break;
                case 10:
                    message.jsonName = reader.string();
                    break;
                case 8:
                    message.options = exports.FieldOptions.decode(reader, reader.uint32());
                    break;
                case 17:
                    message.proto3Optional = reader.bool();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            number: isSet(object.number) ? Number(object.number) : 0,
            label: isSet(object.label) ? fieldDescriptorProto_LabelFromJSON(object.label) : 1,
            type: isSet(object.type) ? fieldDescriptorProto_TypeFromJSON(object.type) : 1,
            typeName: isSet(object.typeName) ? String(object.typeName) : '',
            extendee: isSet(object.extendee) ? String(object.extendee) : '',
            defaultValue: isSet(object.defaultValue) ? String(object.defaultValue) : '',
            oneofIndex: isSet(object.oneofIndex) ? Number(object.oneofIndex) : 0,
            jsonName: isSet(object.jsonName) ? String(object.jsonName) : '',
            options: isSet(object.options) ? exports.FieldOptions.fromJSON(object.options) : undefined,
            proto3Optional: isSet(object.proto3Optional) ? Boolean(object.proto3Optional) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.number !== undefined && (obj.number = Math.round(message.number));
        message.label !== undefined && (obj.label = fieldDescriptorProto_LabelToJSON(message.label));
        message.type !== undefined && (obj.type = fieldDescriptorProto_TypeToJSON(message.type));
        message.typeName !== undefined && (obj.typeName = message.typeName);
        message.extendee !== undefined && (obj.extendee = message.extendee);
        message.defaultValue !== undefined && (obj.defaultValue = message.defaultValue);
        message.oneofIndex !== undefined && (obj.oneofIndex = Math.round(message.oneofIndex));
        message.jsonName !== undefined && (obj.jsonName = message.jsonName);
        message.options !== undefined && (obj.options = message.options ? exports.FieldOptions.toJSON(message.options) : undefined);
        message.proto3Optional !== undefined && (obj.proto3Optional = message.proto3Optional);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var message = Object.create(createBaseFieldDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.number = (_b = object.number) !== null && _b !== void 0 ? _b : 0;
        message.label = (_c = object.label) !== null && _c !== void 0 ? _c : 1;
        message.type = (_d = object.type) !== null && _d !== void 0 ? _d : 1;
        message.typeName = (_e = object.typeName) !== null && _e !== void 0 ? _e : '';
        message.extendee = (_f = object.extendee) !== null && _f !== void 0 ? _f : '';
        message.defaultValue = (_g = object.defaultValue) !== null && _g !== void 0 ? _g : '';
        message.oneofIndex = (_h = object.oneofIndex) !== null && _h !== void 0 ? _h : 0;
        message.jsonName = (_j = object.jsonName) !== null && _j !== void 0 ? _j : '';
        message.options =
            object.options !== undefined && object.options !== null ? exports.FieldOptions.fromPartial(object.options) : undefined;
        message.proto3Optional = (_k = object.proto3Optional) !== null && _k !== void 0 ? _k : false;
        return message;
    }
};
function createBaseOneofDescriptorProto() {
    return { name: '', options: undefined };
}
exports.OneofDescriptorProto = {
    encode: function (message, writer) {
        var e_32, _a, e_33, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        if (message.options !== undefined) {
            exports.OneofOptions.encode(message.options, writer.uint32(18).fork()).ldelim();
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_8 = (e_33 = void 0, __values(values)), values_8_1 = values_8.next(); !values_8_1.done; values_8_1 = values_8.next()) {
                            var value = values_8_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_33_1) { e_33 = { error: e_33_1 }; }
                    finally {
                        try {
                            if (values_8_1 && !values_8_1.done && (_b = values_8["return"])) _b.call(values_8);
                        }
                        finally { if (e_33) throw e_33.error; }
                    }
                }
            }
            catch (e_32_1) { e_32 = { error: e_32_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_32) throw e_32.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseOneofDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.options = exports.OneofOptions.decode(reader, reader.uint32());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            options: isSet(object.options) ? exports.OneofOptions.fromJSON(object.options) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.options !== undefined && (obj.options = message.options ? exports.OneofOptions.toJSON(message.options) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = Object.create(createBaseOneofDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.options =
            object.options !== undefined && object.options !== null ? exports.OneofOptions.fromPartial(object.options) : undefined;
        return message;
    }
};
function createBaseEnumDescriptorProto() {
    return { name: '', value: [], options: undefined, reservedRange: [], reservedName: [] };
}
exports.EnumDescriptorProto = {
    encode: function (message, writer) {
        var e_34, _a, e_35, _b, e_36, _c, e_37, _d, e_38, _e;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        try {
            for (var _f = __values(message.value), _g = _f.next(); !_g.done; _g = _f.next()) {
                var v = _g.value;
                exports.EnumValueDescriptorProto.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_34_1) { e_34 = { error: e_34_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_a = _f["return"])) _a.call(_f);
            }
            finally { if (e_34) throw e_34.error; }
        }
        if (message.options !== undefined) {
            exports.EnumOptions.encode(message.options, writer.uint32(26).fork()).ldelim();
        }
        try {
            for (var _h = __values(message.reservedRange), _j = _h.next(); !_j.done; _j = _h.next()) {
                var v = _j.value;
                exports.EnumDescriptorProto_EnumReservedRange.encode(v, writer.uint32(34).fork()).ldelim();
            }
        }
        catch (e_35_1) { e_35 = { error: e_35_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_b = _h["return"])) _b.call(_h);
            }
            finally { if (e_35) throw e_35.error; }
        }
        try {
            for (var _k = __values(message.reservedName), _l = _k.next(); !_l.done; _l = _k.next()) {
                var v = _l.value;
                writer.uint32(42).string(v);
            }
        }
        catch (e_36_1) { e_36 = { error: e_36_1 }; }
        finally {
            try {
                if (_l && !_l.done && (_c = _k["return"])) _c.call(_k);
            }
            finally { if (e_36) throw e_36.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _m = __values(Object.keys(message['_unknownFields'])), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var key = _o.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_9 = (e_38 = void 0, __values(values)), values_9_1 = values_9.next(); !values_9_1.done; values_9_1 = values_9.next()) {
                            var value = values_9_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_38_1) { e_38 = { error: e_38_1 }; }
                    finally {
                        try {
                            if (values_9_1 && !values_9_1.done && (_e = values_9["return"])) _e.call(values_9);
                        }
                        finally { if (e_38) throw e_38.error; }
                    }
                }
            }
            catch (e_37_1) { e_37 = { error: e_37_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m["return"])) _d.call(_m);
                }
                finally { if (e_37) throw e_37.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseEnumDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.value.push(exports.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.options = exports.EnumOptions.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.reservedRange.push(exports.EnumDescriptorProto_EnumReservedRange.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.reservedName.push(reader.string());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            value: Array.isArray(object === null || object === void 0 ? void 0 : object.value) ? object.value.map(function (e) { return exports.EnumValueDescriptorProto.fromJSON(e); }) : [],
            options: isSet(object.options) ? exports.EnumOptions.fromJSON(object.options) : undefined,
            reservedRange: Array.isArray(object === null || object === void 0 ? void 0 : object.reservedRange)
                ? object.reservedRange.map(function (e) { return exports.EnumDescriptorProto_EnumReservedRange.fromJSON(e); })
                : [],
            reservedName: Array.isArray(object === null || object === void 0 ? void 0 : object.reservedName) ? object.reservedName.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        if (message.value) {
            obj.value = message.value.map(function (e) { return (e ? exports.EnumValueDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.value = [];
        }
        message.options !== undefined && (obj.options = message.options ? exports.EnumOptions.toJSON(message.options) : undefined);
        if (message.reservedRange) {
            obj.reservedRange = message.reservedRange.map(function (e) {
                return e ? exports.EnumDescriptorProto_EnumReservedRange.toJSON(e) : undefined;
            });
        }
        else {
            obj.reservedRange = [];
        }
        if (message.reservedName) {
            obj.reservedName = message.reservedName.map(function (e) { return e; });
        }
        else {
            obj.reservedName = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = Object.create(createBaseEnumDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.value = ((_b = object.value) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.EnumValueDescriptorProto.fromPartial(e); })) || [];
        message.options =
            object.options !== undefined && object.options !== null ? exports.EnumOptions.fromPartial(object.options) : undefined;
        message.reservedRange =
            ((_c = object.reservedRange) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.EnumDescriptorProto_EnumReservedRange.fromPartial(e); })) || [];
        message.reservedName = ((_d = object.reservedName) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseEnumDescriptorProto_EnumReservedRange() {
    return { start: 0, end: 0 };
}
exports.EnumDescriptorProto_EnumReservedRange = {
    encode: function (message, writer) {
        var e_39, _a, e_40, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.start !== 0) {
            writer.uint32(8).int32(message.start);
        }
        if (message.end !== 0) {
            writer.uint32(16).int32(message.end);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_10 = (e_40 = void 0, __values(values)), values_10_1 = values_10.next(); !values_10_1.done; values_10_1 = values_10.next()) {
                            var value = values_10_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_40_1) { e_40 = { error: e_40_1 }; }
                    finally {
                        try {
                            if (values_10_1 && !values_10_1.done && (_b = values_10["return"])) _b.call(values_10);
                        }
                        finally { if (e_40) throw e_40.error; }
                    }
                }
            }
            catch (e_39_1) { e_39 = { error: e_39_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_39) throw e_39.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseEnumDescriptorProto_EnumReservedRange());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.start = reader.int32();
                    break;
                case 2:
                    message.end = reader.int32();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            start: isSet(object.start) ? Number(object.start) : 0,
            end: isSet(object.end) ? Number(object.end) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.start !== undefined && (obj.start = Math.round(message.start));
        message.end !== undefined && (obj.end = Math.round(message.end));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseEnumDescriptorProto_EnumReservedRange());
        message.start = (_a = object.start) !== null && _a !== void 0 ? _a : 0;
        message.end = (_b = object.end) !== null && _b !== void 0 ? _b : 0;
        return message;
    }
};
function createBaseEnumValueDescriptorProto() {
    return { name: '', number: 0, options: undefined };
}
exports.EnumValueDescriptorProto = {
    encode: function (message, writer) {
        var e_41, _a, e_42, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        if (message.number !== 0) {
            writer.uint32(16).int32(message.number);
        }
        if (message.options !== undefined) {
            exports.EnumValueOptions.encode(message.options, writer.uint32(26).fork()).ldelim();
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_11 = (e_42 = void 0, __values(values)), values_11_1 = values_11.next(); !values_11_1.done; values_11_1 = values_11.next()) {
                            var value = values_11_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_42_1) { e_42 = { error: e_42_1 }; }
                    finally {
                        try {
                            if (values_11_1 && !values_11_1.done && (_b = values_11["return"])) _b.call(values_11);
                        }
                        finally { if (e_42) throw e_42.error; }
                    }
                }
            }
            catch (e_41_1) { e_41 = { error: e_41_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_41) throw e_41.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseEnumValueDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.number = reader.int32();
                    break;
                case 3:
                    message.options = exports.EnumValueOptions.decode(reader, reader.uint32());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            number: isSet(object.number) ? Number(object.number) : 0,
            options: isSet(object.options) ? exports.EnumValueOptions.fromJSON(object.options) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.number !== undefined && (obj.number = Math.round(message.number));
        message.options !== undefined &&
            (obj.options = message.options ? exports.EnumValueOptions.toJSON(message.options) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseEnumValueDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.number = (_b = object.number) !== null && _b !== void 0 ? _b : 0;
        message.options =
            object.options !== undefined && object.options !== null
                ? exports.EnumValueOptions.fromPartial(object.options)
                : undefined;
        return message;
    }
};
function createBaseServiceDescriptorProto() {
    return { name: '', method: [], options: undefined };
}
exports.ServiceDescriptorProto = {
    encode: function (message, writer) {
        var e_43, _a, e_44, _b, e_45, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        try {
            for (var _d = __values(message.method), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.MethodDescriptorProto.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_43_1) { e_43 = { error: e_43_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_43) throw e_43.error; }
        }
        if (message.options !== undefined) {
            exports.ServiceOptions.encode(message.options, writer.uint32(26).fork()).ldelim();
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_12 = (e_45 = void 0, __values(values)), values_12_1 = values_12.next(); !values_12_1.done; values_12_1 = values_12.next()) {
                            var value = values_12_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_45_1) { e_45 = { error: e_45_1 }; }
                    finally {
                        try {
                            if (values_12_1 && !values_12_1.done && (_c = values_12["return"])) _c.call(values_12);
                        }
                        finally { if (e_45) throw e_45.error; }
                    }
                }
            }
            catch (e_44_1) { e_44 = { error: e_44_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_44) throw e_44.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseServiceDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.method.push(exports.MethodDescriptorProto.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.options = exports.ServiceOptions.decode(reader, reader.uint32());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            method: Array.isArray(object === null || object === void 0 ? void 0 : object.method) ? object.method.map(function (e) { return exports.MethodDescriptorProto.fromJSON(e); }) : [],
            options: isSet(object.options) ? exports.ServiceOptions.fromJSON(object.options) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        if (message.method) {
            obj.method = message.method.map(function (e) { return (e ? exports.MethodDescriptorProto.toJSON(e) : undefined); });
        }
        else {
            obj.method = [];
        }
        message.options !== undefined &&
            (obj.options = message.options ? exports.ServiceOptions.toJSON(message.options) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseServiceDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.method = ((_b = object.method) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.MethodDescriptorProto.fromPartial(e); })) || [];
        message.options =
            object.options !== undefined && object.options !== null ? exports.ServiceOptions.fromPartial(object.options) : undefined;
        return message;
    }
};
function createBaseMethodDescriptorProto() {
    return {
        name: '',
        inputType: '',
        outputType: '',
        options: undefined,
        clientStreaming: false,
        serverStreaming: false
    };
}
exports.MethodDescriptorProto = {
    encode: function (message, writer) {
        var e_46, _a, e_47, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        if (message.inputType !== '') {
            writer.uint32(18).string(message.inputType);
        }
        if (message.outputType !== '') {
            writer.uint32(26).string(message.outputType);
        }
        if (message.options !== undefined) {
            exports.MethodOptions.encode(message.options, writer.uint32(34).fork()).ldelim();
        }
        if (message.clientStreaming === true) {
            writer.uint32(40).bool(message.clientStreaming);
        }
        if (message.serverStreaming === true) {
            writer.uint32(48).bool(message.serverStreaming);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_13 = (e_47 = void 0, __values(values)), values_13_1 = values_13.next(); !values_13_1.done; values_13_1 = values_13.next()) {
                            var value = values_13_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_47_1) { e_47 = { error: e_47_1 }; }
                    finally {
                        try {
                            if (values_13_1 && !values_13_1.done && (_b = values_13["return"])) _b.call(values_13);
                        }
                        finally { if (e_47) throw e_47.error; }
                    }
                }
            }
            catch (e_46_1) { e_46 = { error: e_46_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_46) throw e_46.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseMethodDescriptorProto());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.inputType = reader.string();
                    break;
                case 3:
                    message.outputType = reader.string();
                    break;
                case 4:
                    message.options = exports.MethodOptions.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.clientStreaming = reader.bool();
                    break;
                case 6:
                    message.serverStreaming = reader.bool();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : '',
            inputType: isSet(object.inputType) ? String(object.inputType) : '',
            outputType: isSet(object.outputType) ? String(object.outputType) : '',
            options: isSet(object.options) ? exports.MethodOptions.fromJSON(object.options) : undefined,
            clientStreaming: isSet(object.clientStreaming) ? Boolean(object.clientStreaming) : false,
            serverStreaming: isSet(object.serverStreaming) ? Boolean(object.serverStreaming) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.inputType !== undefined && (obj.inputType = message.inputType);
        message.outputType !== undefined && (obj.outputType = message.outputType);
        message.options !== undefined &&
            (obj.options = message.options ? exports.MethodOptions.toJSON(message.options) : undefined);
        message.clientStreaming !== undefined && (obj.clientStreaming = message.clientStreaming);
        message.serverStreaming !== undefined && (obj.serverStreaming = message.serverStreaming);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = Object.create(createBaseMethodDescriptorProto());
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : '';
        message.inputType = (_b = object.inputType) !== null && _b !== void 0 ? _b : '';
        message.outputType = (_c = object.outputType) !== null && _c !== void 0 ? _c : '';
        message.options =
            object.options !== undefined && object.options !== null ? exports.MethodOptions.fromPartial(object.options) : undefined;
        message.clientStreaming = (_d = object.clientStreaming) !== null && _d !== void 0 ? _d : false;
        message.serverStreaming = (_e = object.serverStreaming) !== null && _e !== void 0 ? _e : false;
        return message;
    }
};
function createBaseFileOptions() {
    return {
        javaPackage: '',
        javaOuterClassname: '',
        javaMultipleFiles: false,
        javaGenerateEqualsAndHash: false,
        javaStringCheckUtf8: false,
        optimizeFor: 1,
        goPackage: '',
        ccGenericServices: false,
        javaGenericServices: false,
        pyGenericServices: false,
        phpGenericServices: false,
        deprecated: false,
        ccEnableArenas: false,
        objcClassPrefix: '',
        csharpNamespace: '',
        swiftPrefix: '',
        phpClassPrefix: '',
        phpNamespace: '',
        phpMetadataNamespace: '',
        rubyPackage: '',
        uninterpretedOption: []
    };
}
exports.FileOptions = {
    encode: function (message, writer) {
        var e_48, _a, e_49, _b, e_50, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.javaPackage !== '') {
            writer.uint32(10).string(message.javaPackage);
        }
        if (message.javaOuterClassname !== '') {
            writer.uint32(66).string(message.javaOuterClassname);
        }
        if (message.javaMultipleFiles === true) {
            writer.uint32(80).bool(message.javaMultipleFiles);
        }
        if (message.javaGenerateEqualsAndHash === true) {
            writer.uint32(160).bool(message.javaGenerateEqualsAndHash);
        }
        if (message.javaStringCheckUtf8 === true) {
            writer.uint32(216).bool(message.javaStringCheckUtf8);
        }
        if (message.optimizeFor !== 1) {
            writer.uint32(72).int32(message.optimizeFor);
        }
        if (message.goPackage !== '') {
            writer.uint32(90).string(message.goPackage);
        }
        if (message.ccGenericServices === true) {
            writer.uint32(128).bool(message.ccGenericServices);
        }
        if (message.javaGenericServices === true) {
            writer.uint32(136).bool(message.javaGenericServices);
        }
        if (message.pyGenericServices === true) {
            writer.uint32(144).bool(message.pyGenericServices);
        }
        if (message.phpGenericServices === true) {
            writer.uint32(336).bool(message.phpGenericServices);
        }
        if (message.deprecated === true) {
            writer.uint32(184).bool(message.deprecated);
        }
        if (message.ccEnableArenas === true) {
            writer.uint32(248).bool(message.ccEnableArenas);
        }
        if (message.objcClassPrefix !== '') {
            writer.uint32(290).string(message.objcClassPrefix);
        }
        if (message.csharpNamespace !== '') {
            writer.uint32(298).string(message.csharpNamespace);
        }
        if (message.swiftPrefix !== '') {
            writer.uint32(314).string(message.swiftPrefix);
        }
        if (message.phpClassPrefix !== '') {
            writer.uint32(322).string(message.phpClassPrefix);
        }
        if (message.phpNamespace !== '') {
            writer.uint32(330).string(message.phpNamespace);
        }
        if (message.phpMetadataNamespace !== '') {
            writer.uint32(354).string(message.phpMetadataNamespace);
        }
        if (message.rubyPackage !== '') {
            writer.uint32(362).string(message.rubyPackage);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_48_1) { e_48 = { error: e_48_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_48) throw e_48.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_14 = (e_50 = void 0, __values(values)), values_14_1 = values_14.next(); !values_14_1.done; values_14_1 = values_14.next()) {
                            var value = values_14_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_50_1) { e_50 = { error: e_50_1 }; }
                    finally {
                        try {
                            if (values_14_1 && !values_14_1.done && (_c = values_14["return"])) _c.call(values_14);
                        }
                        finally { if (e_50) throw e_50.error; }
                    }
                }
            }
            catch (e_49_1) { e_49 = { error: e_49_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_49) throw e_49.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseFileOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.javaPackage = reader.string();
                    break;
                case 8:
                    message.javaOuterClassname = reader.string();
                    break;
                case 10:
                    message.javaMultipleFiles = reader.bool();
                    break;
                case 20:
                    message.javaGenerateEqualsAndHash = reader.bool();
                    break;
                case 27:
                    message.javaStringCheckUtf8 = reader.bool();
                    break;
                case 9:
                    message.optimizeFor = reader.int32();
                    break;
                case 11:
                    message.goPackage = reader.string();
                    break;
                case 16:
                    message.ccGenericServices = reader.bool();
                    break;
                case 17:
                    message.javaGenericServices = reader.bool();
                    break;
                case 18:
                    message.pyGenericServices = reader.bool();
                    break;
                case 42:
                    message.phpGenericServices = reader.bool();
                    break;
                case 23:
                    message.deprecated = reader.bool();
                    break;
                case 31:
                    message.ccEnableArenas = reader.bool();
                    break;
                case 36:
                    message.objcClassPrefix = reader.string();
                    break;
                case 37:
                    message.csharpNamespace = reader.string();
                    break;
                case 39:
                    message.swiftPrefix = reader.string();
                    break;
                case 40:
                    message.phpClassPrefix = reader.string();
                    break;
                case 41:
                    message.phpNamespace = reader.string();
                    break;
                case 44:
                    message.phpMetadataNamespace = reader.string();
                    break;
                case 45:
                    message.rubyPackage = reader.string();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            javaPackage: isSet(object.javaPackage) ? String(object.javaPackage) : '',
            javaOuterClassname: isSet(object.javaOuterClassname) ? String(object.javaOuterClassname) : '',
            javaMultipleFiles: isSet(object.javaMultipleFiles) ? Boolean(object.javaMultipleFiles) : false,
            javaGenerateEqualsAndHash: isSet(object.javaGenerateEqualsAndHash)
                ? Boolean(object.javaGenerateEqualsAndHash)
                : false,
            javaStringCheckUtf8: isSet(object.javaStringCheckUtf8) ? Boolean(object.javaStringCheckUtf8) : false,
            optimizeFor: isSet(object.optimizeFor) ? fileOptions_OptimizeModeFromJSON(object.optimizeFor) : 1,
            goPackage: isSet(object.goPackage) ? String(object.goPackage) : '',
            ccGenericServices: isSet(object.ccGenericServices) ? Boolean(object.ccGenericServices) : false,
            javaGenericServices: isSet(object.javaGenericServices) ? Boolean(object.javaGenericServices) : false,
            pyGenericServices: isSet(object.pyGenericServices) ? Boolean(object.pyGenericServices) : false,
            phpGenericServices: isSet(object.phpGenericServices) ? Boolean(object.phpGenericServices) : false,
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            ccEnableArenas: isSet(object.ccEnableArenas) ? Boolean(object.ccEnableArenas) : false,
            objcClassPrefix: isSet(object.objcClassPrefix) ? String(object.objcClassPrefix) : '',
            csharpNamespace: isSet(object.csharpNamespace) ? String(object.csharpNamespace) : '',
            swiftPrefix: isSet(object.swiftPrefix) ? String(object.swiftPrefix) : '',
            phpClassPrefix: isSet(object.phpClassPrefix) ? String(object.phpClassPrefix) : '',
            phpNamespace: isSet(object.phpNamespace) ? String(object.phpNamespace) : '',
            phpMetadataNamespace: isSet(object.phpMetadataNamespace) ? String(object.phpMetadataNamespace) : '',
            rubyPackage: isSet(object.rubyPackage) ? String(object.rubyPackage) : '',
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.javaPackage !== undefined && (obj.javaPackage = message.javaPackage);
        message.javaOuterClassname !== undefined && (obj.javaOuterClassname = message.javaOuterClassname);
        message.javaMultipleFiles !== undefined && (obj.javaMultipleFiles = message.javaMultipleFiles);
        message.javaGenerateEqualsAndHash !== undefined &&
            (obj.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash);
        message.javaStringCheckUtf8 !== undefined && (obj.javaStringCheckUtf8 = message.javaStringCheckUtf8);
        message.optimizeFor !== undefined && (obj.optimizeFor = fileOptions_OptimizeModeToJSON(message.optimizeFor));
        message.goPackage !== undefined && (obj.goPackage = message.goPackage);
        message.ccGenericServices !== undefined && (obj.ccGenericServices = message.ccGenericServices);
        message.javaGenericServices !== undefined && (obj.javaGenericServices = message.javaGenericServices);
        message.pyGenericServices !== undefined && (obj.pyGenericServices = message.pyGenericServices);
        message.phpGenericServices !== undefined && (obj.phpGenericServices = message.phpGenericServices);
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        message.ccEnableArenas !== undefined && (obj.ccEnableArenas = message.ccEnableArenas);
        message.objcClassPrefix !== undefined && (obj.objcClassPrefix = message.objcClassPrefix);
        message.csharpNamespace !== undefined && (obj.csharpNamespace = message.csharpNamespace);
        message.swiftPrefix !== undefined && (obj.swiftPrefix = message.swiftPrefix);
        message.phpClassPrefix !== undefined && (obj.phpClassPrefix = message.phpClassPrefix);
        message.phpNamespace !== undefined && (obj.phpNamespace = message.phpNamespace);
        message.phpMetadataNamespace !== undefined && (obj.phpMetadataNamespace = message.phpMetadataNamespace);
        message.rubyPackage !== undefined && (obj.rubyPackage = message.rubyPackage);
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
        var message = Object.create(createBaseFileOptions());
        message.javaPackage = (_a = object.javaPackage) !== null && _a !== void 0 ? _a : '';
        message.javaOuterClassname = (_b = object.javaOuterClassname) !== null && _b !== void 0 ? _b : '';
        message.javaMultipleFiles = (_c = object.javaMultipleFiles) !== null && _c !== void 0 ? _c : false;
        message.javaGenerateEqualsAndHash = (_d = object.javaGenerateEqualsAndHash) !== null && _d !== void 0 ? _d : false;
        message.javaStringCheckUtf8 = (_e = object.javaStringCheckUtf8) !== null && _e !== void 0 ? _e : false;
        message.optimizeFor = (_f = object.optimizeFor) !== null && _f !== void 0 ? _f : 1;
        message.goPackage = (_g = object.goPackage) !== null && _g !== void 0 ? _g : '';
        message.ccGenericServices = (_h = object.ccGenericServices) !== null && _h !== void 0 ? _h : false;
        message.javaGenericServices = (_j = object.javaGenericServices) !== null && _j !== void 0 ? _j : false;
        message.pyGenericServices = (_k = object.pyGenericServices) !== null && _k !== void 0 ? _k : false;
        message.phpGenericServices = (_l = object.phpGenericServices) !== null && _l !== void 0 ? _l : false;
        message.deprecated = (_m = object.deprecated) !== null && _m !== void 0 ? _m : false;
        message.ccEnableArenas = (_o = object.ccEnableArenas) !== null && _o !== void 0 ? _o : false;
        message.objcClassPrefix = (_p = object.objcClassPrefix) !== null && _p !== void 0 ? _p : '';
        message.csharpNamespace = (_q = object.csharpNamespace) !== null && _q !== void 0 ? _q : '';
        message.swiftPrefix = (_r = object.swiftPrefix) !== null && _r !== void 0 ? _r : '';
        message.phpClassPrefix = (_s = object.phpClassPrefix) !== null && _s !== void 0 ? _s : '';
        message.phpNamespace = (_t = object.phpNamespace) !== null && _t !== void 0 ? _t : '';
        message.phpMetadataNamespace = (_u = object.phpMetadataNamespace) !== null && _u !== void 0 ? _u : '';
        message.rubyPackage = (_v = object.rubyPackage) !== null && _v !== void 0 ? _v : '';
        message.uninterpretedOption = ((_w = object.uninterpretedOption) === null || _w === void 0 ? void 0 : _w.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseMessageOptions() {
    return {
        messageSetWireFormat: false,
        noStandardDescriptorAccessor: false,
        deprecated: false,
        mapEntry: false,
        uninterpretedOption: []
    };
}
exports.MessageOptions = {
    encode: function (message, writer) {
        var e_51, _a, e_52, _b, e_53, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.messageSetWireFormat === true) {
            writer.uint32(8).bool(message.messageSetWireFormat);
        }
        if (message.noStandardDescriptorAccessor === true) {
            writer.uint32(16).bool(message.noStandardDescriptorAccessor);
        }
        if (message.deprecated === true) {
            writer.uint32(24).bool(message.deprecated);
        }
        if (message.mapEntry === true) {
            writer.uint32(56).bool(message.mapEntry);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_51_1) { e_51 = { error: e_51_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_51) throw e_51.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_15 = (e_53 = void 0, __values(values)), values_15_1 = values_15.next(); !values_15_1.done; values_15_1 = values_15.next()) {
                            var value = values_15_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_53_1) { e_53 = { error: e_53_1 }; }
                    finally {
                        try {
                            if (values_15_1 && !values_15_1.done && (_c = values_15["return"])) _c.call(values_15);
                        }
                        finally { if (e_53) throw e_53.error; }
                    }
                }
            }
            catch (e_52_1) { e_52 = { error: e_52_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_52) throw e_52.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseMessageOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.messageSetWireFormat = reader.bool();
                    break;
                case 2:
                    message.noStandardDescriptorAccessor = reader.bool();
                    break;
                case 3:
                    message.deprecated = reader.bool();
                    break;
                case 7:
                    message.mapEntry = reader.bool();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageSetWireFormat: isSet(object.messageSetWireFormat) ? Boolean(object.messageSetWireFormat) : false,
            noStandardDescriptorAccessor: isSet(object.noStandardDescriptorAccessor)
                ? Boolean(object.noStandardDescriptorAccessor)
                : false,
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            mapEntry: isSet(object.mapEntry) ? Boolean(object.mapEntry) : false,
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageSetWireFormat !== undefined && (obj.messageSetWireFormat = message.messageSetWireFormat);
        message.noStandardDescriptorAccessor !== undefined &&
            (obj.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor);
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        message.mapEntry !== undefined && (obj.mapEntry = message.mapEntry);
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = Object.create(createBaseMessageOptions());
        message.messageSetWireFormat = (_a = object.messageSetWireFormat) !== null && _a !== void 0 ? _a : false;
        message.noStandardDescriptorAccessor = (_b = object.noStandardDescriptorAccessor) !== null && _b !== void 0 ? _b : false;
        message.deprecated = (_c = object.deprecated) !== null && _c !== void 0 ? _c : false;
        message.mapEntry = (_d = object.mapEntry) !== null && _d !== void 0 ? _d : false;
        message.uninterpretedOption = ((_e = object.uninterpretedOption) === null || _e === void 0 ? void 0 : _e.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseFieldOptions() {
    return { ctype: 0, packed: false, jstype: 0, lazy: false, deprecated: false, weak: false, uninterpretedOption: [] };
}
exports.FieldOptions = {
    encode: function (message, writer) {
        var e_54, _a, e_55, _b, e_56, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.ctype !== 0) {
            writer.uint32(8).int32(message.ctype);
        }
        if (message.packed === true) {
            writer.uint32(16).bool(message.packed);
        }
        if (message.jstype !== 0) {
            writer.uint32(48).int32(message.jstype);
        }
        if (message.lazy === true) {
            writer.uint32(40).bool(message.lazy);
        }
        if (message.deprecated === true) {
            writer.uint32(24).bool(message.deprecated);
        }
        if (message.weak === true) {
            writer.uint32(80).bool(message.weak);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_54_1) { e_54 = { error: e_54_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_54) throw e_54.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_16 = (e_56 = void 0, __values(values)), values_16_1 = values_16.next(); !values_16_1.done; values_16_1 = values_16.next()) {
                            var value = values_16_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_56_1) { e_56 = { error: e_56_1 }; }
                    finally {
                        try {
                            if (values_16_1 && !values_16_1.done && (_c = values_16["return"])) _c.call(values_16);
                        }
                        finally { if (e_56) throw e_56.error; }
                    }
                }
            }
            catch (e_55_1) { e_55 = { error: e_55_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_55) throw e_55.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseFieldOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.ctype = reader.int32();
                    break;
                case 2:
                    message.packed = reader.bool();
                    break;
                case 6:
                    message.jstype = reader.int32();
                    break;
                case 5:
                    message.lazy = reader.bool();
                    break;
                case 3:
                    message.deprecated = reader.bool();
                    break;
                case 10:
                    message.weak = reader.bool();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            ctype: isSet(object.ctype) ? fieldOptions_CTypeFromJSON(object.ctype) : 0,
            packed: isSet(object.packed) ? Boolean(object.packed) : false,
            jstype: isSet(object.jstype) ? fieldOptions_JSTypeFromJSON(object.jstype) : 0,
            lazy: isSet(object.lazy) ? Boolean(object.lazy) : false,
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            weak: isSet(object.weak) ? Boolean(object.weak) : false,
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.ctype !== undefined && (obj.ctype = fieldOptions_CTypeToJSON(message.ctype));
        message.packed !== undefined && (obj.packed = message.packed);
        message.jstype !== undefined && (obj.jstype = fieldOptions_JSTypeToJSON(message.jstype));
        message.lazy !== undefined && (obj.lazy = message.lazy);
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        message.weak !== undefined && (obj.weak = message.weak);
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g;
        var message = Object.create(createBaseFieldOptions());
        message.ctype = (_a = object.ctype) !== null && _a !== void 0 ? _a : 0;
        message.packed = (_b = object.packed) !== null && _b !== void 0 ? _b : false;
        message.jstype = (_c = object.jstype) !== null && _c !== void 0 ? _c : 0;
        message.lazy = (_d = object.lazy) !== null && _d !== void 0 ? _d : false;
        message.deprecated = (_e = object.deprecated) !== null && _e !== void 0 ? _e : false;
        message.weak = (_f = object.weak) !== null && _f !== void 0 ? _f : false;
        message.uninterpretedOption = ((_g = object.uninterpretedOption) === null || _g === void 0 ? void 0 : _g.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseOneofOptions() {
    return { uninterpretedOption: [] };
}
exports.OneofOptions = {
    encode: function (message, writer) {
        var e_57, _a, e_58, _b, e_59, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_57_1) { e_57 = { error: e_57_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_57) throw e_57.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_17 = (e_59 = void 0, __values(values)), values_17_1 = values_17.next(); !values_17_1.done; values_17_1 = values_17.next()) {
                            var value = values_17_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_59_1) { e_59 = { error: e_59_1 }; }
                    finally {
                        try {
                            if (values_17_1 && !values_17_1.done && (_c = values_17["return"])) _c.call(values_17);
                        }
                        finally { if (e_59) throw e_59.error; }
                    }
                }
            }
            catch (e_58_1) { e_58 = { error: e_58_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_58) throw e_58.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseOneofOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = Object.create(createBaseOneofOptions());
        message.uninterpretedOption = ((_a = object.uninterpretedOption) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseEnumOptions() {
    return { allowAlias: false, deprecated: false, uninterpretedOption: [] };
}
exports.EnumOptions = {
    encode: function (message, writer) {
        var e_60, _a, e_61, _b, e_62, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.allowAlias === true) {
            writer.uint32(16).bool(message.allowAlias);
        }
        if (message.deprecated === true) {
            writer.uint32(24).bool(message.deprecated);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_60_1) { e_60 = { error: e_60_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_60) throw e_60.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_18 = (e_62 = void 0, __values(values)), values_18_1 = values_18.next(); !values_18_1.done; values_18_1 = values_18.next()) {
                            var value = values_18_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_62_1) { e_62 = { error: e_62_1 }; }
                    finally {
                        try {
                            if (values_18_1 && !values_18_1.done && (_c = values_18["return"])) _c.call(values_18);
                        }
                        finally { if (e_62) throw e_62.error; }
                    }
                }
            }
            catch (e_61_1) { e_61 = { error: e_61_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_61) throw e_61.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseEnumOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.allowAlias = reader.bool();
                    break;
                case 3:
                    message.deprecated = reader.bool();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            allowAlias: isSet(object.allowAlias) ? Boolean(object.allowAlias) : false,
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.allowAlias !== undefined && (obj.allowAlias = message.allowAlias);
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = Object.create(createBaseEnumOptions());
        message.allowAlias = (_a = object.allowAlias) !== null && _a !== void 0 ? _a : false;
        message.deprecated = (_b = object.deprecated) !== null && _b !== void 0 ? _b : false;
        message.uninterpretedOption = ((_c = object.uninterpretedOption) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseEnumValueOptions() {
    return { deprecated: false, uninterpretedOption: [] };
}
exports.EnumValueOptions = {
    encode: function (message, writer) {
        var e_63, _a, e_64, _b, e_65, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.deprecated === true) {
            writer.uint32(8).bool(message.deprecated);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_63_1) { e_63 = { error: e_63_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_63) throw e_63.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_19 = (e_65 = void 0, __values(values)), values_19_1 = values_19.next(); !values_19_1.done; values_19_1 = values_19.next()) {
                            var value = values_19_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_65_1) { e_65 = { error: e_65_1 }; }
                    finally {
                        try {
                            if (values_19_1 && !values_19_1.done && (_c = values_19["return"])) _c.call(values_19);
                        }
                        finally { if (e_65) throw e_65.error; }
                    }
                }
            }
            catch (e_64_1) { e_64 = { error: e_64_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_64) throw e_64.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseEnumValueOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.deprecated = reader.bool();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseEnumValueOptions());
        message.deprecated = (_a = object.deprecated) !== null && _a !== void 0 ? _a : false;
        message.uninterpretedOption = ((_b = object.uninterpretedOption) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseServiceOptions() {
    return { deprecated: false, uninterpretedOption: [] };
}
exports.ServiceOptions = {
    encode: function (message, writer) {
        var e_66, _a, e_67, _b, e_68, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.deprecated === true) {
            writer.uint32(264).bool(message.deprecated);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_66_1) { e_66 = { error: e_66_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_66) throw e_66.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_20 = (e_68 = void 0, __values(values)), values_20_1 = values_20.next(); !values_20_1.done; values_20_1 = values_20.next()) {
                            var value = values_20_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_68_1) { e_68 = { error: e_68_1 }; }
                    finally {
                        try {
                            if (values_20_1 && !values_20_1.done && (_c = values_20["return"])) _c.call(values_20);
                        }
                        finally { if (e_68) throw e_68.error; }
                    }
                }
            }
            catch (e_67_1) { e_67 = { error: e_67_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_67) throw e_67.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseServiceOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 33:
                    message.deprecated = reader.bool();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseServiceOptions());
        message.deprecated = (_a = object.deprecated) !== null && _a !== void 0 ? _a : false;
        message.uninterpretedOption = ((_b = object.uninterpretedOption) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseMethodOptions() {
    return { deprecated: false, idempotencyLevel: 0, uninterpretedOption: [] };
}
exports.MethodOptions = {
    encode: function (message, writer) {
        var e_69, _a, e_70, _b, e_71, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.deprecated === true) {
            writer.uint32(264).bool(message.deprecated);
        }
        if (message.idempotencyLevel !== 0) {
            writer.uint32(272).int32(message.idempotencyLevel);
        }
        try {
            for (var _d = __values(message.uninterpretedOption), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption.encode(v, writer.uint32(7994).fork()).ldelim();
            }
        }
        catch (e_69_1) { e_69 = { error: e_69_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_69) throw e_69.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_21 = (e_71 = void 0, __values(values)), values_21_1 = values_21.next(); !values_21_1.done; values_21_1 = values_21.next()) {
                            var value = values_21_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_71_1) { e_71 = { error: e_71_1 }; }
                    finally {
                        try {
                            if (values_21_1 && !values_21_1.done && (_c = values_21["return"])) _c.call(values_21);
                        }
                        finally { if (e_71) throw e_71.error; }
                    }
                }
            }
            catch (e_70_1) { e_70 = { error: e_70_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_70) throw e_70.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseMethodOptions());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 33:
                    message.deprecated = reader.bool();
                    break;
                case 34:
                    message.idempotencyLevel = reader.int32();
                    break;
                case 999:
                    message.uninterpretedOption.push(exports.UninterpretedOption.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            deprecated: isSet(object.deprecated) ? Boolean(object.deprecated) : false,
            idempotencyLevel: isSet(object.idempotencyLevel)
                ? methodOptions_IdempotencyLevelFromJSON(object.idempotencyLevel)
                : 0,
            uninterpretedOption: Array.isArray(object === null || object === void 0 ? void 0 : object.uninterpretedOption)
                ? object.uninterpretedOption.map(function (e) { return exports.UninterpretedOption.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.deprecated !== undefined && (obj.deprecated = message.deprecated);
        message.idempotencyLevel !== undefined &&
            (obj.idempotencyLevel = methodOptions_IdempotencyLevelToJSON(message.idempotencyLevel));
        if (message.uninterpretedOption) {
            obj.uninterpretedOption = message.uninterpretedOption.map(function (e) { return (e ? exports.UninterpretedOption.toJSON(e) : undefined); });
        }
        else {
            obj.uninterpretedOption = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = Object.create(createBaseMethodOptions());
        message.deprecated = (_a = object.deprecated) !== null && _a !== void 0 ? _a : false;
        message.idempotencyLevel = (_b = object.idempotencyLevel) !== null && _b !== void 0 ? _b : 0;
        message.uninterpretedOption = ((_c = object.uninterpretedOption) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.UninterpretedOption.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseUninterpretedOption() {
    return {
        name: [],
        identifierValue: '',
        positiveIntValue: 0,
        negativeIntValue: 0,
        doubleValue: 0,
        stringValue: new Uint8Array(),
        aggregateValue: ''
    };
}
exports.UninterpretedOption = {
    encode: function (message, writer) {
        var e_72, _a, e_73, _b, e_74, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        try {
            for (var _d = __values(message.name), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.UninterpretedOption_NamePart.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_72_1) { e_72 = { error: e_72_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_72) throw e_72.error; }
        }
        if (message.identifierValue !== '') {
            writer.uint32(26).string(message.identifierValue);
        }
        if (message.positiveIntValue !== 0) {
            writer.uint32(32).uint64(message.positiveIntValue);
        }
        if (message.negativeIntValue !== 0) {
            writer.uint32(40).int64(message.negativeIntValue);
        }
        if (message.doubleValue !== 0) {
            writer.uint32(49).double(message.doubleValue);
        }
        if (message.stringValue.length !== 0) {
            writer.uint32(58).bytes(message.stringValue);
        }
        if (message.aggregateValue !== '') {
            writer.uint32(66).string(message.aggregateValue);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_22 = (e_74 = void 0, __values(values)), values_22_1 = values_22.next(); !values_22_1.done; values_22_1 = values_22.next()) {
                            var value = values_22_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_74_1) { e_74 = { error: e_74_1 }; }
                    finally {
                        try {
                            if (values_22_1 && !values_22_1.done && (_c = values_22["return"])) _c.call(values_22);
                        }
                        finally { if (e_74) throw e_74.error; }
                    }
                }
            }
            catch (e_73_1) { e_73 = { error: e_73_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_73) throw e_73.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseUninterpretedOption());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.name.push(exports.UninterpretedOption_NamePart.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.identifierValue = reader.string();
                    break;
                case 4:
                    message.positiveIntValue = longToNumber(reader.uint64());
                    break;
                case 5:
                    message.negativeIntValue = longToNumber(reader.int64());
                    break;
                case 6:
                    message.doubleValue = reader.double();
                    break;
                case 7:
                    message.stringValue = reader.bytes();
                    break;
                case 8:
                    message.aggregateValue = reader.string();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: Array.isArray(object === null || object === void 0 ? void 0 : object.name) ? object.name.map(function (e) { return exports.UninterpretedOption_NamePart.fromJSON(e); }) : [],
            identifierValue: isSet(object.identifierValue) ? String(object.identifierValue) : '',
            positiveIntValue: isSet(object.positiveIntValue) ? Number(object.positiveIntValue) : 0,
            negativeIntValue: isSet(object.negativeIntValue) ? Number(object.negativeIntValue) : 0,
            doubleValue: isSet(object.doubleValue) ? Number(object.doubleValue) : 0,
            stringValue: isSet(object.stringValue) ? bytesFromBase64(object.stringValue) : new Uint8Array(),
            aggregateValue: isSet(object.aggregateValue) ? String(object.aggregateValue) : ''
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.name) {
            obj.name = message.name.map(function (e) { return (e ? exports.UninterpretedOption_NamePart.toJSON(e) : undefined); });
        }
        else {
            obj.name = [];
        }
        message.identifierValue !== undefined && (obj.identifierValue = message.identifierValue);
        message.positiveIntValue !== undefined && (obj.positiveIntValue = Math.round(message.positiveIntValue));
        message.negativeIntValue !== undefined && (obj.negativeIntValue = Math.round(message.negativeIntValue));
        message.doubleValue !== undefined && (obj.doubleValue = message.doubleValue);
        message.stringValue !== undefined &&
            (obj.stringValue = base64FromBytes(message.stringValue !== undefined ? message.stringValue : new Uint8Array()));
        message.aggregateValue !== undefined && (obj.aggregateValue = message.aggregateValue);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g;
        var message = Object.create(createBaseUninterpretedOption());
        message.name = ((_a = object.name) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.UninterpretedOption_NamePart.fromPartial(e); })) || [];
        message.identifierValue = (_b = object.identifierValue) !== null && _b !== void 0 ? _b : '';
        message.positiveIntValue = (_c = object.positiveIntValue) !== null && _c !== void 0 ? _c : 0;
        message.negativeIntValue = (_d = object.negativeIntValue) !== null && _d !== void 0 ? _d : 0;
        message.doubleValue = (_e = object.doubleValue) !== null && _e !== void 0 ? _e : 0;
        message.stringValue = (_f = object.stringValue) !== null && _f !== void 0 ? _f : new Uint8Array();
        message.aggregateValue = (_g = object.aggregateValue) !== null && _g !== void 0 ? _g : '';
        return message;
    }
};
function createBaseUninterpretedOption_NamePart() {
    return { namePart: '', isExtension: false };
}
exports.UninterpretedOption_NamePart = {
    encode: function (message, writer) {
        var e_75, _a, e_76, _b;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.namePart !== '') {
            writer.uint32(10).string(message.namePart);
        }
        if (message.isExtension === true) {
            writer.uint32(16).bool(message.isExtension);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _c = __values(Object.keys(message['_unknownFields'])), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_23 = (e_76 = void 0, __values(values)), values_23_1 = values_23.next(); !values_23_1.done; values_23_1 = values_23.next()) {
                            var value = values_23_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_76_1) { e_76 = { error: e_76_1 }; }
                    finally {
                        try {
                            if (values_23_1 && !values_23_1.done && (_b = values_23["return"])) _b.call(values_23);
                        }
                        finally { if (e_76) throw e_76.error; }
                    }
                }
            }
            catch (e_75_1) { e_75 = { error: e_75_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c["return"])) _a.call(_c);
                }
                finally { if (e_75) throw e_75.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseUninterpretedOption_NamePart());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.namePart = reader.string();
                    break;
                case 2:
                    message.isExtension = reader.bool();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            namePart: isSet(object.namePart) ? String(object.namePart) : '',
            isExtension: isSet(object.isExtension) ? Boolean(object.isExtension) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.namePart !== undefined && (obj.namePart = message.namePart);
        message.isExtension !== undefined && (obj.isExtension = message.isExtension);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = Object.create(createBaseUninterpretedOption_NamePart());
        message.namePart = (_a = object.namePart) !== null && _a !== void 0 ? _a : '';
        message.isExtension = (_b = object.isExtension) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseSourceCodeInfo() {
    return { location: [] };
}
exports.SourceCodeInfo = {
    encode: function (message, writer) {
        var e_77, _a, e_78, _b, e_79, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        try {
            for (var _d = __values(message.location), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.SourceCodeInfo_Location.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_77_1) { e_77 = { error: e_77_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_77) throw e_77.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_24 = (e_79 = void 0, __values(values)), values_24_1 = values_24.next(); !values_24_1.done; values_24_1 = values_24.next()) {
                            var value = values_24_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_79_1) { e_79 = { error: e_79_1 }; }
                    finally {
                        try {
                            if (values_24_1 && !values_24_1.done && (_c = values_24["return"])) _c.call(values_24);
                        }
                        finally { if (e_79) throw e_79.error; }
                    }
                }
            }
            catch (e_78_1) { e_78 = { error: e_78_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_78) throw e_78.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseSourceCodeInfo());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.location.push(exports.SourceCodeInfo_Location.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            location: Array.isArray(object === null || object === void 0 ? void 0 : object.location)
                ? object.location.map(function (e) { return exports.SourceCodeInfo_Location.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.location) {
            obj.location = message.location.map(function (e) { return (e ? exports.SourceCodeInfo_Location.toJSON(e) : undefined); });
        }
        else {
            obj.location = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = Object.create(createBaseSourceCodeInfo());
        message.location = ((_a = object.location) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.SourceCodeInfo_Location.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseSourceCodeInfo_Location() {
    return { path: [], span: [], leadingComments: '', trailingComments: '', leadingDetachedComments: [] };
}
exports.SourceCodeInfo_Location = {
    encode: function (message, writer) {
        var e_80, _a, e_81, _b, e_82, _c, e_83, _d, e_84, _e;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        writer.uint32(10).fork();
        try {
            for (var _f = __values(message.path), _g = _f.next(); !_g.done; _g = _f.next()) {
                var v = _g.value;
                writer.int32(v);
            }
        }
        catch (e_80_1) { e_80 = { error: e_80_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_a = _f["return"])) _a.call(_f);
            }
            finally { if (e_80) throw e_80.error; }
        }
        writer.ldelim();
        writer.uint32(18).fork();
        try {
            for (var _h = __values(message.span), _j = _h.next(); !_j.done; _j = _h.next()) {
                var v = _j.value;
                writer.int32(v);
            }
        }
        catch (e_81_1) { e_81 = { error: e_81_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_b = _h["return"])) _b.call(_h);
            }
            finally { if (e_81) throw e_81.error; }
        }
        writer.ldelim();
        if (message.leadingComments !== '') {
            writer.uint32(26).string(message.leadingComments);
        }
        if (message.trailingComments !== '') {
            writer.uint32(34).string(message.trailingComments);
        }
        try {
            for (var _k = __values(message.leadingDetachedComments), _l = _k.next(); !_l.done; _l = _k.next()) {
                var v = _l.value;
                writer.uint32(50).string(v);
            }
        }
        catch (e_82_1) { e_82 = { error: e_82_1 }; }
        finally {
            try {
                if (_l && !_l.done && (_c = _k["return"])) _c.call(_k);
            }
            finally { if (e_82) throw e_82.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _m = __values(Object.keys(message['_unknownFields'])), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var key = _o.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_25 = (e_84 = void 0, __values(values)), values_25_1 = values_25.next(); !values_25_1.done; values_25_1 = values_25.next()) {
                            var value = values_25_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_84_1) { e_84 = { error: e_84_1 }; }
                    finally {
                        try {
                            if (values_25_1 && !values_25_1.done && (_e = values_25["return"])) _e.call(values_25);
                        }
                        finally { if (e_84) throw e_84.error; }
                    }
                }
            }
            catch (e_83_1) { e_83 = { error: e_83_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m["return"])) _d.call(_m);
                }
                finally { if (e_83) throw e_83.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseSourceCodeInfo_Location());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.path.push(reader.int32());
                        }
                    }
                    else {
                        message.path.push(reader.int32());
                    }
                    break;
                case 2:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.span.push(reader.int32());
                        }
                    }
                    else {
                        message.span.push(reader.int32());
                    }
                    break;
                case 3:
                    message.leadingComments = reader.string();
                    break;
                case 4:
                    message.trailingComments = reader.string();
                    break;
                case 6:
                    message.leadingDetachedComments.push(reader.string());
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            path: Array.isArray(object === null || object === void 0 ? void 0 : object.path) ? object.path.map(function (e) { return Number(e); }) : [],
            span: Array.isArray(object === null || object === void 0 ? void 0 : object.span) ? object.span.map(function (e) { return Number(e); }) : [],
            leadingComments: isSet(object.leadingComments) ? String(object.leadingComments) : '',
            trailingComments: isSet(object.trailingComments) ? String(object.trailingComments) : '',
            leadingDetachedComments: Array.isArray(object === null || object === void 0 ? void 0 : object.leadingDetachedComments)
                ? object.leadingDetachedComments.map(function (e) { return String(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.path) {
            obj.path = message.path.map(function (e) { return Math.round(e); });
        }
        else {
            obj.path = [];
        }
        if (message.span) {
            obj.span = message.span.map(function (e) { return Math.round(e); });
        }
        else {
            obj.span = [];
        }
        message.leadingComments !== undefined && (obj.leadingComments = message.leadingComments);
        message.trailingComments !== undefined && (obj.trailingComments = message.trailingComments);
        if (message.leadingDetachedComments) {
            obj.leadingDetachedComments = message.leadingDetachedComments.map(function (e) { return e; });
        }
        else {
            obj.leadingDetachedComments = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = Object.create(createBaseSourceCodeInfo_Location());
        message.path = ((_a = object.path) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.span = ((_b = object.span) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.leadingComments = (_c = object.leadingComments) !== null && _c !== void 0 ? _c : '';
        message.trailingComments = (_d = object.trailingComments) !== null && _d !== void 0 ? _d : '';
        message.leadingDetachedComments = ((_e = object.leadingDetachedComments) === null || _e === void 0 ? void 0 : _e.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseGeneratedCodeInfo() {
    return { annotation: [] };
}
exports.GeneratedCodeInfo = {
    encode: function (message, writer) {
        var e_85, _a, e_86, _b, e_87, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        try {
            for (var _d = __values(message.annotation), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.GeneratedCodeInfo_Annotation.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_85_1) { e_85 = { error: e_85_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_85) throw e_85.error; }
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_26 = (e_87 = void 0, __values(values)), values_26_1 = values_26.next(); !values_26_1.done; values_26_1 = values_26.next()) {
                            var value = values_26_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_87_1) { e_87 = { error: e_87_1 }; }
                    finally {
                        try {
                            if (values_26_1 && !values_26_1.done && (_c = values_26["return"])) _c.call(values_26);
                        }
                        finally { if (e_87) throw e_87.error; }
                    }
                }
            }
            catch (e_86_1) { e_86 = { error: e_86_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_86) throw e_86.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseGeneratedCodeInfo());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.annotation.push(exports.GeneratedCodeInfo_Annotation.decode(reader, reader.uint32()));
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            annotation: Array.isArray(object === null || object === void 0 ? void 0 : object.annotation)
                ? object.annotation.map(function (e) { return exports.GeneratedCodeInfo_Annotation.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.annotation) {
            obj.annotation = message.annotation.map(function (e) { return (e ? exports.GeneratedCodeInfo_Annotation.toJSON(e) : undefined); });
        }
        else {
            obj.annotation = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = Object.create(createBaseGeneratedCodeInfo());
        message.annotation = ((_a = object.annotation) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GeneratedCodeInfo_Annotation.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGeneratedCodeInfo_Annotation() {
    return { path: [], sourceFile: '', begin: 0, end: 0 };
}
exports.GeneratedCodeInfo_Annotation = {
    encode: function (message, writer) {
        var e_88, _a, e_89, _b, e_90, _c;
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        writer.uint32(10).fork();
        try {
            for (var _d = __values(message.path), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                writer.int32(v);
            }
        }
        catch (e_88_1) { e_88 = { error: e_88_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d["return"])) _a.call(_d);
            }
            finally { if (e_88) throw e_88.error; }
        }
        writer.ldelim();
        if (message.sourceFile !== '') {
            writer.uint32(18).string(message.sourceFile);
        }
        if (message.begin !== 0) {
            writer.uint32(24).int32(message.begin);
        }
        if (message.end !== 0) {
            writer.uint32(32).int32(message.end);
        }
        if ('_unknownFields' in message) {
            try {
                for (var _f = __values(Object.keys(message['_unknownFields'])), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    var values = message['_unknownFields'][key];
                    try {
                        for (var values_27 = (e_90 = void 0, __values(values)), values_27_1 = values_27.next(); !values_27_1.done; values_27_1 = values_27.next()) {
                            var value = values_27_1.value;
                            writer.uint32(parseInt(key, 10));
                            writer['_push'](function (val, buf, pos) { return buf.set(val, pos); }, value.length, value);
                        }
                    }
                    catch (e_90_1) { e_90 = { error: e_90_1 }; }
                    finally {
                        try {
                            if (values_27_1 && !values_27_1.done && (_c = values_27["return"])) _c.call(values_27);
                        }
                        finally { if (e_90) throw e_90.error; }
                    }
                }
            }
            catch (e_89_1) { e_89 = { error: e_89_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f["return"])) _b.call(_f);
                }
                finally { if (e_89) throw e_89.error; }
            }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.Reader ? input : new minimal_1.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = Object.create(createBaseGeneratedCodeInfo_Annotation());
        message._unknownFields = {};
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.path.push(reader.int32());
                        }
                    }
                    else {
                        message.path.push(reader.int32());
                    }
                    break;
                case 2:
                    message.sourceFile = reader.string();
                    break;
                case 3:
                    message.begin = reader.int32();
                    break;
                case 4:
                    message.end = reader.int32();
                    break;
                default:
                    var startPos = reader.pos;
                    reader.skipType(tag & 7);
                    message._unknownFields[tag] = __spread((message._unknownFields[tag] || []), [
                        reader.buf.slice(startPos, reader.pos),
                    ]);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            path: Array.isArray(object === null || object === void 0 ? void 0 : object.path) ? object.path.map(function (e) { return Number(e); }) : [],
            sourceFile: isSet(object.sourceFile) ? String(object.sourceFile) : '',
            begin: isSet(object.begin) ? Number(object.begin) : 0,
            end: isSet(object.end) ? Number(object.end) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.path) {
            obj.path = message.path.map(function (e) { return Math.round(e); });
        }
        else {
            obj.path = [];
        }
        message.sourceFile !== undefined && (obj.sourceFile = message.sourceFile);
        message.begin !== undefined && (obj.begin = Math.round(message.begin));
        message.end !== undefined && (obj.end = Math.round(message.end));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = Object.create(createBaseGeneratedCodeInfo_Annotation());
        message.path = ((_a = object.path) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.sourceFile = (_b = object.sourceFile) !== null && _b !== void 0 ? _b : '';
        message.begin = (_c = object.begin) !== null && _c !== void 0 ? _c : 0;
        message.end = (_d = object.end) !== null && _d !== void 0 ? _d : 0;
        return message;
    }
};
var globalThis = (function () {
    if (typeof globalThis !== 'undefined')
        return globalThis;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
var atob = globalThis.atob || (function (b64) { return globalThis.Buffer.from(b64, 'base64').toString('binary'); });
function bytesFromBase64(b64) {
    var bin = atob(b64);
    var arr = new Uint8Array(bin.length);
    for (var i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
    }
    return arr;
}
var btoa = globalThis.btoa || (function (bin) { return globalThis.Buffer.from(bin, 'binary').toString('base64'); });
function base64FromBytes(arr) {
    var e_91, _a;
    var bin = [];
    try {
        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {
            var byte = arr_1_1.value;
            bin.push(String.fromCharCode(byte));
        }
    }
    catch (e_91_1) { e_91 = { error: e_91_1 }; }
    finally {
        try {
            if (arr_1_1 && !arr_1_1.done && (_a = arr_1["return"])) _a.call(arr_1);
        }
        finally { if (e_91) throw e_91.error; }
    }
    return btoa(bin.join(''));
}
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');
    }
    return long.toNumber();
}
// If you get a compile-error about 'Constructor<Long> and ... have no overlap',
// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.
if (minimal_1.util.Long !== Long) {
    minimal_1.util.Long = Long;
    minimal_1.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
